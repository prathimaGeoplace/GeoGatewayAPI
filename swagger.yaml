---
swagger: "2.0"
info:
  description: "The purpose of the interface is to provide a self-serve web page,\
    \ using the existing services site and authentication methods.  The project will\
    \ also aim to improve and extend some of the existing functionality for gathering\
    \ contact and account information held in Salesforce."
  version: "1.0.0"
  title: "GeoGateway"
  contact:
    email: "prathima.prahallada@geoplace.co.uk"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "services-ui.dev.geoplace.co.uk"
tags:
- name: "address"
  description: "Controller for Address Home Page"
- name: "calendarEvents"
  description: "Controller for Calendar Events"
- name: "authorityMessages"
  description: "Controller for Authority Messages"
- name: "addressCoordinates"
  description: "Controller for Address Coordinates"
- name: "addressTertiaryClassification"
  description: "Controller for Address Tertiary Classification"
- name: "addressSubmission"
  description: "Controller for Address Submission"
- name: "addressCandidates"
  description: "Controller for Address Candidates"
- name: "addressComparison"
  description: "Controller for Street Comparision on Address"
- name: "addressHealthCheck"
  description: "Controller for Address Data Consistency"
- name: "addressStats"
  description: "Controller for Address Statistics"
- name: "priorityHealthCheck"
  description: "Controller for Priority Health Check"
- name: "addressUnresolvedCandidates"
  description: "Controller for Unresolved Candidates"
- name: "streets"
  description: "Controller for Street Home Page"
- name: "streetClassifiedNetworks"
  description: "Controller for Street Classified Network"
- name: "streetClassifiedGap"
  description: "Controller for Street Classified Network Gap"
- name: "streetSubmission"
  description: "Controller for Street New Content and Street Update Timeliness"
- name: "streetHealthCheck"
  description: "Controller for Street Health Check 1 and Health Check 2"
- name: "streetLifeCycle"
  description: "Controller for Missing Streets and Under Construction"
- name: "streetSedStructure"
  description: "Controller for Street SEDs & Structure"
- name: "streetPrn"
  description: "Controller for Streets Primary Route Network"
- name: "streetComparison"
  description: "Controller for Street Comparison on Street"
- name: "streetEsu"
  description: "Controller for Street ESU extremity points"
- name: "streetHgvRoute"
  description: "Controller for Street HGV Approved Routes"
- name: "streetMaintenance"
  description: "Controller for Street Maintenance"
- name: "streetMotorway"
  description: "Controller for Street Motorway"
- name: "streetNcr"
  description: "Controller for Street National Cycle Routes"
- name: "streetPedestrian"
  description: "Controller for Street Pedestrian Crossing"
- name: "streetProw"
  description: "Controller for Street Public Rights of Way"
- name: "streetWinterRoute"
  description: "Controller for Street Winter Route"
- name: "streetDeclaration"
  description: "Controller for Update Street Declaration"
- name: "regionalChair"
  description: "Controller for Regional Address and Street Chair"
- name: "expCircumstances"
  description: "Controller for Exceptional Circumstances"
- name: "aceDetails"
  description: "Controller for ACE UI Page"
schemes:
- "https"
paths:
  /api/ggw/address/summary/{authCode}:
    get:
      tags:
      - "address"
      summary: "Get Landing Page Details"
      description: "Returns AddressLandingPageDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressLandingPageDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Landing Page Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/address/stats/{authCode}:
    get:
      tags:
      - "address"
      summary: "Get Annual Performance Statistics for Authority"
      description: "Returns AddressAnnualStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressLevelStats"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Annual Stats not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/address/awards/{authCode}:
    get:
      tags:
      - "address"
      summary: "Get the list of Authority awards from Objectstore"
      description: "Returns Authority Awards"
      produces:
      - "images/jpeg"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "returns all the award images belonging to that authority as\
            \ a List of String"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "No Images found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/address/downloadReports/:
    get:
      tags:
      - "address"
      summary: "Get Reports from Objectstore"
      description: "Downloads the Reports from Objectstore"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/pdf"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "reportType"
        in: "formData"
        description: "Type of the report like IS, Pre-Brenchmark etc"
        required: true
        type: "string"
      responses:
        "200":
          description: "downloads the specified report from the objectstore"
        "400":
          description: "Invalid Input"
        "404":
          description: "Report not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/address/downloadAwards/:
    get:
      tags:
      - "address"
      summary: "Get Award Image from Objectstore"
      description: "Downloads the Award Image from Objectstore"
      consumes:
      - "multipart/form-data"
      produces:
      - "images/jpeg"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "imageName"
        in: "formData"
        description: "Name of the image"
        required: true
        type: "string"
      responses:
        "200":
          description: "downloads the specified image from the objectstore"
        "400":
          description: "Invalid Input"
        "404":
          description: "Image not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/address/tnlStats/{authCode}:
    get:
      tags:
      - "address"
      summary: "Get To Next Level Stats for the Authority"
      description: "Returns AddressToNextLevelStats"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressToNextLevelStats"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "ToNextLevel Stats not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/authorityMessages:
    get:
      tags:
      - "authorityMessages"
      summary: "Get Messages for Authority"
      description: "Returns top 3 AuthorityMessages for Address/Street Home Page filtered\
        \ based on authCode, gazeetterId, region, accountType and role and ordered\
        \ by Priority"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "contactId"
        in: "formData"
        description: "Contact Id of the logged in user"
        required: true
        type: "number"
      - name: "gazeetterId"
        in: "formData"
        description: "indicates Address(1) or Street(2) based on the page user is\
          \ accessing"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuthorityMessage"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Authority Messages not found"
      security:
      - authorise:
        - "has_roles"
    post:
      tags:
      - "authorityMessages"
      summary: "Creates a new Message or updates an existing authority message"
      operationId: "createAuthorityMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "AuthorityMessage object that has to be created or updated"
        required: true
        schema:
          $ref: "#/definitions/AuthorityMessageDTO"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_super_admin_only"
  /api/ggw/authorityMessages/allMessages:
    get:
      tags:
      - "authorityMessages"
      summary: "Get All AuthorityMessages"
      description: "Returns messages from the AuthorityMessages table based on the\
        \ filters selected by the user in the View Authority Mesages UI. This method\
        \ should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: false
        type: "number"
      - name: "region"
        in: "formData"
        required: false
        type: "number"
      - name: "accountType"
        in: "formData"
        required: false
        type: "number"
      - name: "role"
        in: "formData"
        required: false
        type: "number"
      - name: "priority"
        in: "formData"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuthorityMessage"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Authority Messages not found"
      security:
      - authorise:
        - "has_super_admin_only"
  /api/ggw/authorityMessages/close/{authorityMessageId}:
    post:
      tags:
      - "authorityMessages"
      summary: "updates the DisabledFlag column in the AuthorityMessages table so\
        \ that the message will not be visible to users again"
      operationId: "closeAuthorityMessage"
      parameters:
      - name: "authorityMessageId"
        in: "path"
        description: "ID of the message"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/authorityMessages/{authorityMessageId}:
    get:
      tags:
      - "authorityMessages"
      summary: "Get AuthorityMessage object based on ID when user clicks on Edit link"
      description: "Returns AuthorityMessage"
      produces:
      - "application/json"
      parameters:
      - name: "authorityMessageId"
        in: "path"
        description: "ID of the selected AuthorityMessage"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthorityMessage"
        "400":
          description: "Invalid authorityMessageId supplied"
        "404":
          description: "Message not found"
      security:
      - authorise:
        - "has_super_admin_only"
    delete:
      tags:
      - "authorityMessages"
      summary: "Deletes the Authority Message"
      operationId: "deleteAuthorityMessage"
      parameters:
      - name: "authorityMessageId"
        in: "path"
        description: "ID of the selected AuthorityMessage"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successfully deleted"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "authority message not found"
      security:
      - authorise:
        - "has_super_admin_only"
  /api/ggw/addressCoordinates/{authCode}:
    get:
      tags:
      - "addressCoordinates"
      summary: "Get All Details for Coordinates Landing Page"
      description: "Returns AddressCoordinates"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressCoordinates"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Coordinate Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressCoordinates/downloadReport/{authCode}:
    get:
      tags:
      - "addressCoordinates"
      summary: "Generate Coordinates Report for Authority"
      description: "Generates Coordinates report as a excel based on the data fetched\
        \ from AddressCoordinatesReportData and AddressCoordinates"
      produces:
      - "text/plain"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "downloads the address coordinates report from the objectstore"
        "400":
          description: "Invalid Input"
        "404":
          description: "Report not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressTertiary/{authCode}:
    get:
      tags:
      - "addressTertiaryClassification"
      summary: "Get All Details for Tertiary Residential Classification Landing Page"
      description: "Returns AddressTertiaryClassification"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressTertiaryClassification"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Tertiary Classification Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressSubmission/{authCode}:
    get:
      tags:
      - "addressSubmission"
      summary: "Get All Details for Update Frequency Landing Page"
      description: "Returns AddressSubmission"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressSubmission"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Submission Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressCandidates/{authCode}:
    get:
      tags:
      - "addressCandidates"
      summary: "Get All Details for Address Candidates Landing Page"
      description: "Returns AddressCandidates"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressCandidates"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Candidate Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/calendarEvents:
    post:
      tags:
      - "calendarEvents"
      summary: "Creates a new event or updates an existing event"
      operationId: "upsertCalendarEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "CalendarEvent object that has to be created or updated"
        required: true
        schema:
          $ref: "#/definitions/CalendarEvents"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_super_admin_only"
  /api/ggw/calendarEvents/{eventCategory}:
    get:
      tags:
      - "calendarEvents"
      summary: "Get Calendar Events for Address/Street Home Page"
      description: "Returns all the Calendar Events for Address/Street based on the\
        \ eventCategory"
      produces:
      - "application/json"
      parameters:
      - name: "eventCategory"
        in: "path"
        description: "Address or Streets based on the page user is accessing"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CalendarEvents"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Calendar Events not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/calendarEvents/event/{calendarEventId}:
    get:
      tags:
      - "calendarEvents"
      summary: "Get Calendar Event when user selects Edit option"
      description: "Returns calendarEvent object"
      produces:
      - "application/json"
      parameters:
      - name: "calendarEventId"
        in: "path"
        description: "ID of the selected calendarEvent"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CalendarEvents"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Calendar Event not found"
      security:
      - authorise:
        - "has_super_admin_only"
    delete:
      tags:
      - "calendarEvents"
      summary: "Deletes the Calendar Event"
      operationId: "deleteCalendarEvent"
      parameters:
      - name: "calendarEventId"
        in: "path"
        description: "ID of the selected CalendarEvent"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successfully deleted"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
      security:
      - authorise:
        - "has_super_admin_only"
  /api/ggw/addressComparison/{authCode}:
    get:
      tags:
      - "addressComparison"
      summary: "Get All Details for Address Street Comparison Landing Page"
      description: "Returns AddressComparison"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressComparison"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Street Comparison Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressComparison/custodianDetails/{authCode}:
    get:
      tags:
      - "addressComparison"
      summary: "Retrieve the Street Custodian Details for Address-Street Comparison\
        \ UI"
      description: "Returns AddressStreetCustodian"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressStreetCustodian"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Custodian Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressComparison/errors:
    get:
      tags:
      - "addressComparison"
      summary: "Get All Street Comparison errors"
      description: "Returns all the errors, warning from AddressComparisonData based\
        \ on the filter criteria to populate on the Street Comparison Errors Table.\
        \ This should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "queryCode"
        in: "formData"
        required: false
        type: "string"
      - name: "checkType"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "priorityNextYearFlag"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressComparisonData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Comparison Errors not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/{authCode}:
    get:
      tags:
      - "addressHealthCheck"
      summary: "Get All Details for Address Data Consistency Landing Page"
      description: "Returns AddressHealthCheck"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressHealthCheck"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Health Check Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/getErrorCounts/{authCode}:
    get:
      tags:
      - "addressHealthCheck"
      summary: "Get Error, Warning and Recurring Error Counts for Address Data Consistency\
        \ Landing Page"
      description: "Returns AddressHealthCheckErrorCountsDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressHealthCheckErrorCountsDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Health Check Error Counts not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/hcErrors:
    get:
      tags:
      - "addressHealthCheck"
      summary: "Get All Address Health Check errors"
      description: "Returns all the errors, warning from AddressHealthCheckData based\
        \ on the filter criteria to populate on the Data Consistency Table. This should\
        \ include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "errorCode"
        in: "formData"
        required: false
        type: "string"
      - name: "errorType"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "errorsNextYear"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressHealthCheckData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Authority Health Check errors not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/generateExceptionFile/{authCode}:
    post:
      tags:
      - "addressHealthCheck"
      summary: "Generates Txt file for Authorities to download that includes all the\
        \ records and messages in the required format"
      operationId: "generateExceptionFile"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "AddressExpDTO object to generate the text file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/AddressExpDTO"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/submitExceptions/{authCode}:
    post:
      tags:
      - "addressHealthCheck"
      summary: "Generates Exceptions file for Authorities and sends the file to the\
        \ geoplace mail id \"exceptions@geoplace.co.uk\""
      operationId: "submitExceptions"
      consumes:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "AddressExpDTO object to generate the text file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/AddressExpDTO"
      responses:
        "200":
          description: "Exception File submitted to Geoplace"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/exceptionsReport/{authCode}:
    get:
      tags:
      - "addressHealthCheck"
      summary: "Generates csv file for the submitted address exceptions by the authority\
        \ until date"
      description: "Returns csv file"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid AuthCode supplied"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressHealthCheck/summaryCounts/{authCode}/{recordType}:
    get:
      tags:
      - "addressHealthCheck"
      summary: "Get Error, Warning and Recurring Error Counts for each distinct error\
        \ code for Address Data Consistency Landing Page"
      description: "Returns AddressHCErrorsPerRecordTypeDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "recordType"
        in: "path"
        description: "Record Type"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressHCErrorsPerRecordTypeDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Health Check Summary Counts not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressStats/{authCode}:
    get:
      tags:
      - "addressStats"
      summary: "Get all counts related to Address Statistics for the Additional Information\
        \ link on Data Consistency"
      description: "Returns AddressStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressStatistics"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Statistics Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/priorityHealthCheck/{authCode}:
    get:
      tags:
      - "priorityHealthCheck"
      summary: "Get All Details for Priority Health Check Landing Page"
      description: "Returns PriorityHealthCheck"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PriorityHealthCheck"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Priority Health Check Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/priorityHealthCheck/errors:
    get:
      tags:
      - "priorityHealthCheck"
      summary: "Get All Address Priority Health Check errors"
      description: "Returns all the errors, warning from PriorityHealthCheckErrorData\
        \ based on the filter criteria to populate on the Priority Health check UI.\
        \ This should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "errorCode"
        in: "formData"
        required: false
        type: "string"
      - name: "errorType"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "errorsNextYear"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PriorityHealthCheckErrorData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Priority Health Check errors not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/priorityHealthCheck/getErrorCounts/{authCode}:
    get:
      tags:
      - "priorityHealthCheck"
      summary: "Get Error, Warning and Recurring Error Counts for AddressPriority\
        \ errors Landing Page"
      description: "Returns PriorityHealthCheckErrorCountsDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PriorityHealthCheckErrorCountsDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Priority Health Check Error Counts not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/priorityHealthCheck/summaryCounts/{authCode}/{recordType}:
    get:
      tags:
      - "priorityHealthCheck"
      summary: "Get Error, Warning and Recurring Error Counts for each distinct error\
        \ code for Priority Errors Landing Page"
      description: "Returns PriorityErrorsPerRecordTypeDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "recordType"
        in: "path"
        description: "Record Type"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PriorityErrorsPerRecordTypeDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Priority Health Check Summary Counts not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/addressUnresolvedCandidates/{authCode}:
    get:
      tags:
      - "addressUnresolvedCandidates"
      summary: "Get All Details for Unresolved Candidates Landing Page"
      description: "Returns AddressCandidates"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressUnresolvedCandidates"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Unresolved Candidate Details not found"
      security:
      - authorise:
        - "has_roles"
  /api/ggw/streets/summary/{authCode}:
    get:
      tags:
      - "streets"
      summary: "Retrieve all the Improvement schedule levels for all Criteria and\
        \ Indicators for the Street home page"
      description: "Returns StreetLandingPageDTO"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetLandingPageDTO"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Landing Page Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streets/stats/{authCode}:
    get:
      tags:
      - "streets"
      summary: "Retrieve all the details for the Annual Performance Statistics graph"
      description: "Returns StreetLevelStats"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetLevelStats"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Streets Annual Stats not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streets/awards/{authCode}:
    get:
      tags:
      - "streets"
      summary: "Get the list of Authority awards for Streets from Objectstore"
      description: "Returns Authority Awards"
      produces:
      - "images/jpeg"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "returns all the street award images belonging to that authority\
            \ as a List of String"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "No Images found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streets/downloadReports/:
    get:
      tags:
      - "streets"
      summary: "Get Street Reports from Objectstore"
      description: "Download the Street Reports from Objectstore"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/pdf"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "reportType"
        in: "formData"
        description: "Type of the report like IS, Pre-Brenchmark etc"
        required: true
        type: "string"
      responses:
        "200":
          description: "downloads the specified report from the objectstore"
        "400":
          description: "Invalid Input"
        "404":
          description: "Report not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streets/downloadAwards/:
    get:
      tags:
      - "streets"
      summary: "Get Award Image from Objectstore"
      description: "Downloads the Street Award Image from Objectstore"
      consumes:
      - "multipart/form-data"
      produces:
      - "images/jpeg"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - name: "imageName"
        in: "formData"
        description: "Name of the image"
        required: true
        type: "string"
      responses:
        "200":
          description: "downloads the specified image from the objectstore"
        "400":
          description: "Invalid Input"
        "404":
          description: "Image not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streets/tnlStats/{authCode}:
    get:
      tags:
      - "streets"
      summary: "Get To Next Level Stats for the Authority"
      description: "Returns StreetToNextLevelStats"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetToNextLevelStats"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "ToNextLevel Stats not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetClassifiedNetworks/{authCode}:
    get:
      tags:
      - "streetClassifiedNetworks"
      summary: "Retrieve all the Improvement schedule levels and other declaration\
        \ details for Classified Networks page"
      description: "Returns StreetClassifiedNetwork"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetClassifiedNetwork"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Classified Networks Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetClassifiedGap/{authCode}:
    get:
      tags:
      - "streetClassifiedGap"
      summary: "Retrieve all the Improvement schedule levels and other declaration\
        \ details for Classified Networks Gap page"
      description: "Returns StreetClassifiedGap"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetClassifiedGap"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Classified Network Gap Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetLifeCycle/{authCode}:
    get:
      tags:
      - "streetLifeCycle"
      summary: "Retrieve all the Improvement schedule levels and other declaration\
        \ details for Missing Streets and Under Construction"
      description: "Returns StreetLifeCycle"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetLifeCycle"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Life Cycle Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetLifeCycle/missingStreet/errors/{authCode}:
    get:
      tags:
      - "streetLifeCycle"
      summary: "Get All errors of the specified authCode for Missing Streets"
      description: "Returns all the errors from MissingStreetData"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MissingStreetData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Missing Street Data not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetLifeCycle/underConstruction/errors/{authCode}:
    get:
      tags:
      - "streetLifeCycle"
      summary: "Get All errors of the specified authCode for Under Construction"
      description: "Returns all the errors from StreetUnderConstructionData"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetUnderConstructionData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Under Construction Data not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetLifeCycle/generateExceptionFile/{authCode}:
    post:
      tags:
      - "streetLifeCycle"
      summary: "Generates Txt file for Authorities to download that includes all the\
        \ records and messages in the required format"
      operationId: "generateMissingStreetExceptionFile"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "MissingStreetExceptionsDTO object to generate the text file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/MissingStreetExceptionsDTO"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetLifeCycle/submitExceptions:
    post:
      tags:
      - "streetLifeCycle"
      summary: "Generates Missing Exceptions file and send a mail to support@geoplace.co.uk"
      operationId: "submitMissingStreetExceptions"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of  MissingStreetExceptionsDTO objects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/MissingStreetExceptionsDTO"
      responses:
        "200":
          description: "Missing Street Exceptions sent"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetSubmission/{authCode}:
    get:
      tags:
      - "streetSubmission"
      summary: "Retrieve all the Improvement schedule levels details for New Content\
        \ and Update Timeliness"
      description: "Returns StreetSubmission"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetSubmission"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Submission Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/{authCode}:
    get:
      tags:
      - "streetHealthCheck"
      summary: "Retrieve all the Improvement schedule levels details for Street health\
        \ check 1 and health check 2"
      description: "Returns StreetHealthCheckDetails"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetHealthCheckDetails"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Health Check Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/hc1Errors:
    get:
      tags:
      - "streetHealthCheck"
      summary: "Get All errors of the specified authCode for Street Health Check 1"
      description: "Returns all the errors, warning from StreetHealthCheck based on\
        \ the filter criteria to populate on the Street Health Check 1. The errors\
        \ should belong to the one of these error codes (CR502,CR503,CR504,CR505,CR506,CR507,ER307,HD804,HD805,HW701,HW702,HW703,HW704,IR406,IR413,IR414,IR415,IR416,IR417,IR418,IR419,OD901,SD203,SD211,SP604,SP605,SP608,SP609,SP610,SP611,SP612,SP613,SP614,SPSR001,SPSR002,SR108).\
        \ This should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "errorCode"
        in: "formData"
        required: false
        type: "string"
      - name: "type"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "errorsNextYear"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetHealthCheckData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Health check Errors not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/hc2Errors:
    get:
      tags:
      - "streetHealthCheck"
      summary: "Get All errors of the specified authCode for Street Health Check 2"
      description: "Returns all the errors, warning from StreetHealthCheck based on\
        \ the filter criteria to populate on the Street Health Check 2. The errors\
        \ should belong to the one of these error codes (HD801,HD802,IR410,IR411,SD204,SD206,SD207,SD210,SD213).\
        \ This should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "errorCode"
        in: "formData"
        required: false
        type: "string"
      - name: "type"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "errorsNextYear"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetHealthCheckData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Health Check Errors not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/summaryCounts/{authCode}/{hcType}:
    get:
      tags:
      - "streetHealthCheck"
      summary: "Get the total counts for each record type for hc 1 and 2"
      description: "returns the total error counts, review counts and info counts\
        \ for street health check 1 and 2 summary counts table"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "AuthCode of the logged in user"
        required: true
        type: "number"
      - name: "hcType"
        in: "path"
        description: "hc1 or hc2 depending on the UI page user is accessing"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetHCErrorCountsDTO"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Health Check Error Counts not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/generateExceptionFile:
    post:
      tags:
      - "streetHealthCheck"
      summary: "Generates Txt file for Authorities to download that includes all the\
        \ records and messages in the required format"
      operationId: "generateStreetExceptionFile"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters:
      - in: "body"
        name: "body"
        description: "StreetExceptionDTO object to generate the text file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreetExceptionDTO"
      responses:
        "200":
          description: "successful operation"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/submitExceptions:
    post:
      tags:
      - "streetHealthCheck"
      summary: "Generates Street HC Exceptions file and send a mail to support@geoplace.co.uk"
      operationId: "submitStreetHcExceptions"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of  StreetExceptionDTO objects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreetExceptionDTO"
      responses:
        "200":
          description: "Street Health Check Exceptions sent"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHealthCheck/exceptionsReport/{authCode}:
    get:
      tags:
      - "streetHealthCheck"
      summary: "Generates csv file for the submitted street exceptions by the authority\
        \ until date"
      description: "Returns csv file"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid AuthCode supplied"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetSedStructure/{authCode}:
    get:
      tags:
      - "streetSedStructure"
      summary: "Get Improvement Schedule level details and length details for SEDs\
        \ and Structure"
      description: "Returns StreetSEDStructure"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetSEDStructure"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street SEDs and Structure details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetPrn/{authCode}:
    get:
      tags:
      - "streetPrn"
      summary: "Retrieve all the Improvement schedule levels details and length details\
        \ for Primary Route Network"
      description: "Returns StreetPrimaryRouteNetworks"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetPrimaryRouteNetworks"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Primary Route Network Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetPrn/prnData/{authCode}:
    get:
      tags:
      - "streetPrn"
      summary: "Retrieve the USRN details necessary for Primary Route Network"
      description: "Returns List of StreetPrnData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetPrnData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "USRN Details not found for Primary Route Network"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetComparison/{authCode}:
    get:
      tags:
      - "streetComparison"
      summary: "Retrieve the Improvement schedule level details for Street Comparison"
      description: "Returns StreetComparison"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetComparison"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street Comparison Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetComparison/custodianDetails/{authCode}:
    get:
      tags:
      - "streetComparison"
      summary: "Retrieve the Address Custodian Details for Street Comparison UI"
      description: "Returns StreetAddressCustodian"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetAddressCustodian"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Address Custodian Details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetComparison/errors:
    get:
      tags:
      - "streetComparison"
      summary: "Get All Street Comparison errors"
      description: "Returns all the errors, warning from StreetComparisonData based\
        \ on the filter criteria to populate on the Street Comparison Errors Table.\
        \ This should include sorting and pagination"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "recordType"
        in: "formData"
        required: false
        type: "number"
      - name: "queryCode"
        in: "formData"
        required: false
        type: "string"
      - name: "checkType"
        in: "formData"
        required: false
        type: "string"
      - name: "recurring"
        in: "formData"
        required: false
        type: "string"
      - name: "errorsNextYear"
        in: "formData"
        required: false
        type: "string"
      - name: "referenceKey"
        in: "formData"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetComparisonData"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Comparison Errors not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetEsu/{authCode}:
    get:
      tags:
      - "streetEsu"
      summary: "Get Improvement Schedule level details and length details for ESU\
        \ Extremity Points"
      description: "Returns StreetESUExtremityPoint"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetESUExtremityPoint"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street ESU Extremity Point details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetEsu/esuData/{authCode}:
    get:
      tags:
      - "streetEsu"
      summary: "Retrieve the Street health check errors belonging to the 'SPESU001'\
        \ error code for that authority"
      description: "Returns List of StreetEsuPointData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetEsuPointData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "Street ESU Point Data not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHgvRoute/{authCode}:
    get:
      tags:
      - "streetHgvRoute"
      summary: "Get Improvement Schedule level details and length details for HGV\
        \ Approved Routes"
      description: "Returns StreetHGVRoute"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetHGVRoute"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street HGV Route details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetHgvRoute/hgvData/{authCode}:
    get:
      tags:
      - "streetHgvRoute"
      summary: "Retrieve the USRN details necessary for HGV Approved Routes"
      description: "Returns List of StreetHGVRouteData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetHGVRouteData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "USRN Details not found for HGV Approved Routes"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetMaintenance/{authCode}:
    get:
      tags:
      - "streetMaintenance"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ Maintenance Responsibility"
      description: "Returns StreetMaintenance"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetMaintenance"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Maintenance details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetMaintenance/usrnData/{authCode}:
    get:
      tags:
      - "streetMaintenance"
      summary: "Retrieve the USRN details necessary for Street Maintenance"
      description: "Returns List of StreetMaintenanceData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetMaintenanceData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "USRN Details not found for Street Maintenance"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetMotorway/{authCode}:
    get:
      tags:
      - "streetMotorway"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ Motorways"
      description: "Returns StreetMotorway"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetMotorway"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Motorway details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetNcr/{authCode}:
    get:
      tags:
      - "streetNcr"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ National Cycle Routes"
      description: "Returns StreetNationalCycleRoutes"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetNationalCycleRoutes"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street National Cycle details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetPedestrian/{authCode}:
    get:
      tags:
      - "streetPedestrian"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ Pedestrian Crossing"
      description: "Returns StreetPedestrianCrossing"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetPedestrianCrossing"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Pedestrian Crossing details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetPedestrian/usrnData/{authCode}:
    get:
      tags:
      - "streetPedestrian"
      summary: "Retrieve the USRN details necessary for Pedestrian Crossing"
      description: "Returns List of StreetPedestrianCrossingData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetPedestrianCrossingData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "USRN Details not found for Street Pedestrian Crossing"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetProw/{authCode}:
    get:
      tags:
      - "streetProw"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ Public Rights of Way"
      description: "Returns StreetPublicRightsofWay"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetPublicRightsofWay"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Public Rights of Way details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetWinterRoute/{authCode}:
    get:
      tags:
      - "streetWinterRoute"
      summary: "Get Improvement Schedule level details and length details for Street\
        \ Winter Maintenance Routes"
      description: "Returns StreetWinterRoute"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetWinterRoute"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Winter Route details not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetWinterRoute/usrnData/{authCode}:
    get:
      tags:
      - "streetWinterRoute"
      summary: "Retrieve the USRN details necessary for Winter Maintenance Routes"
      description: "Returns List of StreetWinterRouteData"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetWinterRouteData"
        "400":
          description: "Invalid AuthCode supplied"
        "404":
          description: "USRN Details not found for Street Winter Routes"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/streetDeclaration:
    post:
      tags:
      - "streetDeclaration"
      summary: "Upadte Street Declaration"
      description: "Updates Street Declaration for the specified authority and measure"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "authCode"
        in: "formData"
        required: true
        type: "number"
      - name: "measure"
        in: "formData"
        required: true
        type: "string"
      - name: "declarationValue"
        in: "formData"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetDeclarations"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Declation not found"
      security:
      - authorise:
        - "has_street_roles"
  /api/ggw/regionalChair/addressRegion:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Details for Address"
      description: "Returns Region Details that includes the region name, number of\
        \ authorities and number of non contributers in that region."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddressRegion"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Region details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/addressRegionRank:
    get:
      tags:
      - "regionalChair"
      summary: "Get Regional Rank Details for Address"
      description: "Returns list of Regional Rank Details that includes levels, ratings\
        \ and other details for all Address Criterion."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressRegionRank"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Region Rank details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/addressCriteria:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Address Criteria Details"
      description: "Returns list of Region Address Criteria Details that includes\
        \ levels, ratings and other details for all address criteria."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressRegionCriteria"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Criteria details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/addressIndicators:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Address Indicator Details"
      description: "Returns list of Region Address Indicator Details that includes\
        \ levels, ratings and other details for all address indicator."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressRegionIndicator"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Indicator details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/addressContacts:
    get:
      tags:
      - "regionalChair"
      summary: "Get Contact details of Address Custodians"
      description: "Returns list of Contact details of Address Custodians that includes\
        \ full name, email address of all Custodains and Additional Custodians."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressRegionContacts"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Custodian details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/addressPreBenchmark:
    get:
      tags:
      - "regionalChair"
      summary: "Get Address Pre-Benchmark details"
      description: "Returns list of Address Pre-Benchmark details that levels and\
        \ ratings."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddressRegionPreBenchmark"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Pre Benchmark details not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/streetRegion:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Details for Street"
      description: "Returns Region Details that includes the region name, number of\
        \ authorities and number of non contributers in that region."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/StreetRegion"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Region details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetRegionRank:
    get:
      tags:
      - "regionalChair"
      summary: "Get Regional Rank Details for Street"
      description: "Returns Regional Rank Details that includes levels, ratings and\
        \ other details for all Street Criterion."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetRegionRank"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Region Rank details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetCriteria:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Street Criteria Details"
      description: "Returns list of Region Street Criteria Details that includes levels,\
        \ ratings and other details for all street criteria"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetRegionCriteria"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Criteria details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetIndicators:
    get:
      tags:
      - "regionalChair"
      summary: "Get Region Street Indicator Details"
      description: "Returns list of Region Street Indicator Details that includes\
        \ levels, ratings and other details for all street indicator."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetRegionIndicator"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Indicator details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetContacts:
    get:
      tags:
      - "regionalChair"
      summary: "Get Contact details of Street Custodians"
      description: "Returns list of Contact details of Street Custodians that includes\
        \ full name, email address of all Custodians and Additional Custodians."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetRegionContacts"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Custodian details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetPreBenchmark:
    get:
      tags:
      - "regionalChair"
      summary: "Get Street Pre-Benchmark details"
      description: "Returns list of Street Pre-Benchmark details that levels and ratings."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StreetRegionPreBenchmark"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Pre Benchmark details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/addressReport:
    get:
      tags:
      - "regionalChair"
      summary: "Downloads the Address RC report from Objectstore"
      description: "Downloads the Address Regional Chair excel report from the objectstore"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Regional Chair report not found"
      security:
      - authorise:
        - "has_address_rc_roles"
  /api/ggw/regionalChair/streetReport:
    get:
      tags:
      - "regionalChair"
      summary: "Downloads the Street RC report from Objectstore"
      description: "Downloads the Street Regional Chair excel report from the objectstore"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Regional Chair report not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/addressCustodianReport:
    get:
      tags:
      - "regionalChair"
      summary: "Generates the Address Custodian report"
      description: "Generates a csv report that contains the contact details of all\
        \ address custodians"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Address Custodian details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/regionalChair/streetCustodianReport:
    get:
      tags:
      - "regionalChair"
      summary: "Generates the Street Custodian report"
      description: "Generates a csv report that contains the contact details of all\
        \ street custodians"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "authCode"
        in: "formData"
        description: "authcode of the logged in user"
        required: false
        type: "number"
      - name: "regionId"
        in: "formData"
        description: "RegionId of the selected region from the dropdown"
        required: false
        type: "number"
      responses:
        "200":
          description: "Downloads the report successfully"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Street Custodian details not found"
      security:
      - authorise:
        - "has_street_rc_roles"
  /api/ggw/aceDetails/{authCode}:
    get:
      tags:
      - "aceDetails"
      summary: "Returns the ECF for all Non Contributors"
      description: "Returns a list of NonContributor objects that hold the submitted\
        \ and non submitted form details"
      parameters:
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successfull operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ACEDetails"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Exceptional Circumstances form details not found"
      security:
      - authorise:
        - "has_ace_roles"
  /api/ggw/aceDetails/reviewEcf:
    post:
      tags:
      - "aceDetails"
      summary: "Updates the ACE actions which includes approval/rejection and dismissing\
        \ the ECF forms submitted by authorities."
      operationId: "reviewEcf"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "NonContributors object"
        required: true
        schema:
          $ref: "#/definitions/ACENonContributorDTO"
      responses:
        "200":
          description: "Exceptional Circumstance form is updated"
      security:
      - authorise:
        - "has_ace_roles"
  /api/ggw/expCircumstances/{gazetteerId}/{authCode}:
    get:
      tags:
      - "expCircumstances"
      summary: "Returns the form details for that authority"
      description: "Returns latest entry of the NonContributors for that authority\
        \ that has not been approved yet."
      parameters:
      - name: "gazetteerId"
        in: "path"
        description: "gazetteerId to indicate Address or Street"
        required: true
        type: "number"
      - name: "authCode"
        in: "path"
        description: "Authcode of the logged in user"
        required: true
        type: "number"
      responses:
        "200":
          description: "successfull operation"
          schema:
            $ref: "#/definitions/NonContributor"
        "400":
          description: "Invalid Input parameters supplied"
        "404":
          description: "Exceptional Circumstances form details not found"
      security:
      - authorise:
        - "has_custodian_roles"
  /api/ggw/expCircumstances:
    post:
      tags:
      - "expCircumstances"
      summary: "Updated the ECF action plans, submitter details, confirmer details.\
        \ The API should validate that the submitter and confirmer should not be the\
        \ same person."
      operationId: "submitEcf"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "NonContributors object"
        required: true
        schema:
          $ref: "#/definitions/NonContributor"
      responses:
        "200":
          description: "Exceptional Circumstance form is updated"
      security:
      - authorise:
        - "has_custodian_roles"
securityDefinitions:
  authorise:
    type: "oauth2"
    tokenUrl: "https://login.dev.geoplace.co.uk/login"
    flow: "password"
    scopes:
      has_roles: "super_user, authority_address_custodian, additional_authority_address_custodian,\
        \ dca_authority_principal_contact"
      has_super_admin_only: "super_user"
      has_street_roles: "super_user, authority_street_custodian, additional_authority_street_custodian,\
        \ dca_authority_principal_contact"
      has_address_rc_roles: "super_user, regional_address_chair, regional_deputy_address_chair,\
        \ ace_role"
      has_street_rc_roles: "super_user, regional_street_chair, regional_deputy_street_chair,\
        \ ace_role"
      has_ace_roles: "super_user, ace_role"
      has_custodian_roles: "super_user, authority_address_custodian, additional_authority_address_custodian,\
        \ authority_street_custodian, additional_authority_street_custodian, dca_authority_principal_contact,\
        \ ace_role"
definitions:
  AddressOverall:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      overallLevel:
        type: "string"
        example: "Gold"
      benchmarkLevel:
        type: "string"
        example: "Gold"
      pledgeLevel:
        type: "string"
        example: "Silver"
      nonContributingFlag:
        type: "string"
        format: "enum"
        example: "N"
      streets:
        type: "integer"
        format: "int64"
        example: 10524
      regionalChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
      regionalDeputyChairFlag:
        type: "string"
        format: "enum"
        example: "N"
      regionalDeputyChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalDeputyChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
    description: "refers Web_Address_Main_V View"
  AddressTertiaryClassification:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      tertiaryClassDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      tertiaryClassTotal:
        type: "integer"
        format: "int64"
        example: 86733
      tertiaryClassCompleted:
        type: "integer"
        format: "int64"
        example: 86397
      tertiaryClassRating:
        type: "number"
        format: "double"
        example: 0.99752
      tertiaryClassRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      tertiaryClassLevel:
        type: "string"
        example: "Silver"
      tertiaryClassToNextLevel:
        type: "integer"
        format: "int64"
        example: 128
    description: "refers Web_Address_Class_V View"
  AddressComparison:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      comparisonDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      comparisonTotal:
        type: "integer"
        format: "int64"
        example: 245
      comparisonRecurringErrors:
        type: "integer"
        format: "int64"
        example: 64
      comparisonRating:
        type: "number"
        format: "double"
        example: 2.1E-4
      comparisonRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      comparisonLevel:
        type: "string"
        example: "Bronze"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 109
      addressSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "30/07/2020"
      streetSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "30/07/2020"
    description: "refers Web_Address_Comparison_V View"
  AddressCoordinates:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      coordinateTotal:
        type: "integer"
        format: "int64"
        example: 14576
      coordinateReported:
        type: "integer"
        format: "int64"
        example: 65
      coordinateRating:
        type: "number"
        format: "double"
        example: 0.9994
      coordinateRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      coordinateLevel:
        type: "string"
        example: "Gold"
      coordinateToNextLevel:
        type: "integer"
        format: "int64"
        example: 975
      coordinateNew:
        type: "integer"
        format: "int64"
        example: 230
      coordinateOSSurveyed:
        type: "integer"
        format: "int64"
        example: 13456
      coordinate2Total:
        type: "integer"
        format: "int64"
        example: 167844
      coordinate2Reported:
        type: "integer"
        format: "int64"
        example: 65
      coordinate2Rating:
        type: "number"
        format: "double"
        example: 0.9994
      coordinate2RatingChange:
        type: "number"
        format: "double"
        example: 0.22
      coordinate2Level:
        type: "string"
        example: "Gold"
      coordinate2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 975
      coordinate2New:
        type: "integer"
        format: "int64"
        example: 230
      coordinate2OSSurveyed:
        type: "integer"
        format: "int64"
        example: 13456
      coordinateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      coordinate2Date:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
    description: "refers Web_Address_Coordinate_V view"
  AddressCoordinatesReportData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      analysisName:
        type: "string"
        example: "Coordinates1"
      baRef:
        type: "string"
        example: "abc"
      blpuAddress:
        type: "string"
        example: "4, CERUTTI CLOSE, PAULTON, BRISTOL, BS39 7AY"
      blpuPoint:
        type: "number"
        format: "Point"
        example: ""
      dateAdded:
        type: "string"
        format: "date in dd-mon-yyyy"
        example: "01-May-2020"
      distance:
        type: "number"
        format: "double"
        example: 23434.0
      logicalStatusCode:
        type: "integer"
        format: "int32"
        example: 1
      mastermapDescription:
        type: "string"
        example: "This is just an example"
      mastermapFid:
        type: "string"
        example: "fid"
      ndPrimaryDescription:
        type: "string"
        example: "ND primary description"
      pafAddress:
        type: "string"
        example: "4, CERUTTI CLOSE, PAULTON, BRISTOL, BS39 7AY"
      parentUprn:
        type: "number"
        example: 2432343.0
      proposedPoint:
        type: "number"
        format: "Point"
        example: ""
      proposedXCoordinate:
        type: "number"
        format: "double"
        example: "36492.53,"
      proposedYCoordinate:
        type: "number"
        format: "double"
        example: 15691.97
      rpc:
        type: "integer"
        format: "int32"
        example: 1
      source:
        type: "string"
        example: "null"
      stateCode:
        type: "integer"
        format: "int32"
        example: 2
      stateDate:
        type: "string"
        format: "date in dd-mon-yyyy"
        example: "01-May-2020"
      uarn:
        type: "number"
        example: 34324.0
      udprn:
        type: "number"
        example: 2.3423423E7
      uprn:
        type: "number"
        example: 3.42343432E8
      usrn:
        type: "number"
        example: 3.2432423E7
      voaAddress:
        type: "string"
        example: "null"
      xref:
        type: "string"
        example: "234235342X2342"
      xCoordinate:
        type: "number"
        format: "double"
        example: 322334.43
      yCoordinate:
        type: "number"
        format: "double"
        example: 45678.94
    description: "refers Coordinate_vw view in DATA_ANALYSIS schema"
  AddressHealthCheck:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      healthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      healthCheckTotal:
        type: "integer"
        format: "int64"
        example: 65
      healthCheckRating:
        type: "integer"
        format: "int64"
        example: 173
      healthCheckRatingChange:
        type: "integer"
        format: "int64"
        example: 24
      healthCheckWarning:
        type: "integer"
        format: "int64"
        example: 240
      healthCheckLevel:
        type: "string"
        example: "Gold"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 591
    description: "refers Web_Address_Health_Check_V view"
  AddressSubmission:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      submissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      submissionWeek1:
        type: "integer"
        format: "int32"
        example: 4
      submissionWeek2:
        type: "integer"
        format: "int32"
        example: 6
      submissionWeek3:
        type: "integer"
        format: "int32"
        example: 7
      submissionWeek4:
        type: "integer"
        format: "int32"
        example: 1
      remainingAllowance:
        type: "integer"
        format: "int32"
        example: 8
      lastResyncDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/12/2018"
      submissionRating:
        type: "string"
        example: "Daily"
      submissionRatingChange:
        type: "string"
        example: "Daily"
      submissionUpgrade:
        type: "string"
        example: "Resync"
      submissionLevel:
        type: "string"
        example: "Gold"
      submissionToNextLevel:
        type: "string"
        example: "N/A"
    description: "refers Web_Address_Submission_V view"
  AddressThirdParty:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      priorityObjectDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      priorityObjectRating:
        type: "number"
        format: "double"
        example: 0.99421
      priorityObjectLevel:
        type: "string"
        example: "Silver"
      priorityObjectToNextLevel:
        type: "integer"
        format: "int64"
        example: 612
      newVoaPafDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      newVoaPafUnlinked:
        type: "integer"
        format: "int64"
        example: 31
      newVoaPafRating:
        type: "number"
        format: "double"
        example: 0.9987
      newVoaPafLevel:
        type: "string"
        example: "Silver"
      newVoaPafToNextLevel:
        type: "integer"
        format: "int64"
        example: 612
      ndrDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      ndrRating:
        type: "number"
        format: "double"
        example: 0.9934
      ndrLevel:
        type: "string"
        example: "Silver"
      ndrToNextLevel:
        type: "integer"
        format: "int64"
        example: 76
      pafDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      pafRating:
        type: "number"
        format: "double"
        example: 0.99324
      pafLevel:
        type: "string"
        example: "Silver"
      pafToNextLevel:
        type: "integer"
        format: "int64"
        example: 544
      ctaxDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      ctaxRating:
        type: "number"
        format: "double"
        example: 0.9913
      ctaxLevel:
        type: "string"
        example: "Silver"
      ctaxToNextLevel:
        type: "integer"
        format: "int64"
        example: 32
    description: "refers Web_Address_Third_Party_V view"
  AddressLevelStats:
    type: "object"
    required:
    - "authCode"
    - "reportMonth"
    properties:
      authCode:
        type: "number"
        example: 114.0
      reportMonth:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      overallLevel:
        type: "string"
        example: "Gold"
      coordinateLevel:
        type: "string"
        example: "Gold"
      coordinateRating:
        type: "number"
        example: 0.87
      healthCheckLevel:
        type: "string"
        example: "Gold"
      healthCheckRating:
        type: "number"
        example: 0.99
      healthCheckTotal:
        type: "integer"
        example: 235
      tertiaryClassLevel:
        type: "string"
        example: "Gold"
      tertiaryClassRating:
        type: "number"
        example: 0.65
      coordinate2Level:
        type: "string"
        example: "Gold"
      coordinate2Rating:
        type: "number"
        example: 0.87
      submissionLevel:
        type: "string"
        example: "Gold"
      comparisonLevel:
        type: "string"
        example: "Gold"
      comparisonTotal:
        type: "number"
        example: 234.0
      comparisonRecurring:
        type: "number"
        example: 34.0
      comparisonRating:
        type: "number"
        example: 0.76
      candidateLevel:
        type: "string"
        example: "Gold"
      streets:
        type: "integer"
        format: "int64"
        example: 10524
    description: "refers Web_Address_Trend_V view"
  AddressCandidates:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      candidateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      candidateTotal:
        type: "integer"
        format: "int32"
        example: 3
      candidateProcessedOnTime:
        type: "integer"
        format: "int32"
        example: 4
      candidateTotal2:
        type: "integer"
        format: "int32"
        example: 27
      candidateProcessedOnTime2:
        type: "integer"
        format: "int32"
        example: 7
      candidateRating:
        type: "number"
        format: "double"
        example: 0.333
      candidateProcessRatingChange:
        type: "number"
        format: "double"
        example: 0.333
      candidateLevel:
        type: "string"
        example: "Level 1"
    description: "refers Web_Address_Candidate_V view"
  AddressUnresolvedCandidates:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      unresolvedCandidateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      unresolvedCandidateTotal:
        type: "integer"
        format: "int32"
        example: 3
      unresolvedCandidateProcessedOnTime:
        type: "integer"
        format: "int32"
        example: 4
      unresolvedCandidateRating:
        type: "number"
        format: "double"
        example: 0.333
      unresolvedCandidateProcessRatingChange:
        type: "number"
        format: "double"
        example: 0.333
      unresolvedCandidateLevel:
        type: "string"
        example: "Level 1"
      unresolvedCandidateToNextLevel:
        type: "integer"
        format: "int64"
        example: 975
    description: "refers WEB_ADDRESS_CANDIDATE_2_V view"
  AddressStatistics:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      streetTotal:
        type: "integer"
        format: "int64"
        example: 4
      blpuTotal:
        type: "integer"
        format: "int64"
        example: 5
      xrefTotal:
        type: "integer"
        format: "int64"
        example: 6
      lpiTotal:
        type: "integer"
        format: "int64"
        example: 6
      blpuClassTotal:
        type: "integer"
        format: "int64"
        example: 7
      blpuClassC:
        type: "integer"
        format: "int64"
        example: 7
      blpuClassL:
        type: "integer"
        format: "int64"
        example: 8
      blpuClassM:
        type: "integer"
        format: "int64"
        example: 55
      blpuClassP:
        type: "integer"
        format: "int64"
        example: 2
      blpuClassR:
        type: "integer"
        format: "int64"
        example: 2
      blpuClassZ:
        type: "integer"
        format: "int64"
        example: 6
      blpuClassU:
        type: "integer"
        format: "int64"
        example: 7
      blpuClassUP:
        type: "integer"
        format: "int64"
        example: 2
      blpuRpc:
        type: "integer"
        format: "int64"
        example: 66
      blpuStateCode1:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode2:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode3:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode4:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode5:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode6:
        type: "integer"
        format: "int64"
        example: 6
      blpuStateCode7:
        type: "integer"
        format: "int64"
        example: 6
      residentialWithoutCtax:
        type: "integer"
        format: "int64"
        example: 0
      commercialWithoutNdr:
        type: "integer"
        format: "int64"
        example: 0
    description: "refers WEB_ADDRESS_STATS_V view"
  PriorityHealthCheck:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      priorityHealthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      priorityHealthCheckTotal:
        type: "integer"
        format: "int64"
        example: 65
      priorityHealthCheckRating:
        type: "integer"
        format: "int64"
        example: 173
      priorityHealthCheckRatingChange:
        type: "integer"
        format: "int64"
        example: 24
      priorityHealthCheckLevel:
        type: "string"
        example: "Gold"
      priorityHealthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 591
    description: "refers WEB_ADDRESS_PRIORITY_HEALTH_V view"
  AddressLandingPageDTO:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      overallLevel:
        type: "string"
        example: "Gold"
      benchmarkLevel:
        type: "string"
        example: "Gold"
      pledgeLevel:
        type: "string"
        example: "Silver"
      nonContributingFlag:
        type: "boolean"
        example: false
      coordinateRating:
        type: "number"
        format: "double"
        example: 0.9994
      coordinateLevel:
        type: "string"
        example: "Gold"
      coordinateToNextLevel:
        type: "integer"
        format: "int64"
        example: 975
      coordinate2Rating:
        type: "number"
        format: "double"
        example: 0.9994
      coordinate2Level:
        type: "string"
        example: "Gold"
      coordinate2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 975
      healthCheckRating:
        type: "integer"
        format: "int64"
        example: 173
      healthCheckLevel:
        type: "string"
        example: "Gold"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 591
      priorityHealthCheckRating:
        type: "integer"
        format: "int64"
        example: 173
      priorityHealthCheckLevel:
        type: "string"
        example: "Gold"
      priorityHealthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 591
      tertiaryClassRating:
        type: "number"
        format: "double"
        example: 0.99752
      tertiaryClassLevel:
        type: "string"
        example: "Silver"
      tertiaryClassToNextLevel:
        type: "integer"
        format: "int64"
        example: 128
      priorityObjectRating:
        type: "number"
        format: "double"
        example: 0.99421
      priorityObjectLevel:
        type: "string"
        example: "Silver"
      priorityObjectToNextLevel:
        type: "integer"
        format: "int64"
        example: 612
      newVoaPafUnlinked:
        type: "integer"
        format: "int64"
        example: 31
      newVoaPafRating:
        type: "number"
        format: "double"
        example: 0.9987
      newVoaPafLevel:
        type: "string"
        example: "Silver"
      newVoaPafToNextLevel:
        type: "integer"
        format: "int64"
        example: 612
      ndrRating:
        type: "number"
        format: "double"
        example: 0.9934
      ndrLevel:
        type: "string"
        example: "Silver"
      ndrToNextLevel:
        type: "integer"
        format: "int64"
        example: 76
      pafRating:
        type: "number"
        format: "double"
        example: 0.99324
      pafLevel:
        type: "string"
        example: "Silver"
      pafToNextLevel:
        type: "integer"
        format: "int64"
        example: 544
      ctaxRating:
        type: "number"
        format: "double"
        example: 0.9913
      ctaxLevel:
        type: "string"
        example: "Silver"
      ctaxToNextLevel:
        type: "integer"
        format: "int64"
        example: 32
      submissionRating:
        type: "string"
        example: "Daily"
      submissionLevel:
        type: "string"
        example: "Gold"
      submissionToNextLevel:
        type: "string"
        example: "N/A"
      comparisonRating:
        type: "number"
        format: "double"
        example: 2.1E-4
      comparisonLevel:
        type: "string"
        example: "Bronze"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 109
      candidateRating:
        type: "number"
        format: "double"
        example: 0.333
      candidateLevel:
        type: "string"
        example: "Level 1"
      unresolvedCandidateRating:
        type: "number"
        format: "double"
        example: 0.333
      unresolvedCandidateLevel:
        type: "string"
        example: "Level 1"
      regionalChairName:
        type: "string"
        example: "Cathy Coelho"
      regionalChairEmail:
        type: "string"
        example: "ccoelho@oxford.gov.uk"
      coordinateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      coordinate2Date:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      healthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      priorityHealthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      tertiaryClassDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      priorityObjectDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      newVoaPafDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      ndrDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      pafDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      ctaxDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      submissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      comparisonDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "04/02/2020"
      candidateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      unresolvedCandidateDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "01/08/2019"
      regionalDeputyChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalDeputyChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
    description: "dto object that holds the landing page info"
  Message:
    type: "object"
    required:
    - "gazetteerId"
    - "message"
    - "messageId"
    - "priorityRank"
    - "updatedBy"
    - "updatedDate"
    properties:
      messageId:
        type: "integer"
        format: "int32"
        example: 1
      message:
        type: "string"
        example: "The authority has been BNS for Update Frequency once since April"
      gazetteerId:
        type: "integer"
        format: "int32"
        example: 1
      priorityRank:
        type: "integer"
        format: "int32"
        example: 1
      updatedBy:
        type: "string"
        example: "one.two@domain.com"
      updatedDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/05/2020"
    description: "refers MESSAGES table"
  AuthorityMessage:
    type: "object"
    required:
    - "authorityMessageId"
    - "messageId"
    - "startDate"
    - "updatedBy"
    - "updatedDate"
    properties:
      authorityMessageId:
        type: "integer"
        format: "int64"
        example: 1
      messageId:
        $ref: "#/definitions/Message"
      authCode:
        type: "number"
        example: 114.0
      region:
        type: "integer"
        format: "int32"
        example: 1
      accountType:
        type: "integer"
        format: "int32"
        example: 1
      roleId:
        $ref: "#/definitions/AuthorityRoles"
      startDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/05/2020"
      endDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/06/2020"
      updatedBy:
        type: "string"
        example: "one.two@domain.com"
      updatedDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/06/2020"
      disabledFlag:
        type: "string"
        format: "enum"
        example: "N"
      closableFlag:
        type: "string"
        format: "enum"
        example: "Y"
    description: "refers AUTHORITY_MESSAGES table"
  AuthorityMessageDTO:
    type: "object"
    properties:
      messageType:
        type: "string"
        example: "AuthCode"
        description: "can have values like AuthCode, Region, BNS, NC, AccoutType"
      authorityMessageId:
        type: "integer"
        format: "int64"
        example: 1
      messageId:
        $ref: "#/definitions/Message"
      authCode:
        type: "string"
        example: "114,116"
      region:
        type: "integer"
        format: "int32"
        example: 1
      accountType:
        type: "integer"
        format: "int32"
        example: 1
      roleIds:
        type: "string"
        example: "1,19,14"
      startDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/05/2020"
      endDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/06/2020"
      disabledFlag:
        type: "string"
        format: "enum"
        example: "N"
      closableFlag:
        type: "string"
        format: "enum"
        example: "Y"
    description: "dto refers to the AuthorityMessage request"
  AuthorityRoles:
    type: "object"
    required:
    - "roleId"
    properties:
      roleId:
        type: "integer"
        format: "int32"
        example: 19
      description:
        type: "string"
        example: "Authority Address Custodian"
    description: "refers CUSTOMERS.CONTACT_ROLE_CODES table"
  AddressToNextLevelStats:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      coordinateToLevel1:
        type: "integer"
        format: "int64"
        example: -1032
      coordinateToLevel2:
        type: "integer"
        format: "int64"
        example: -541
      coordinateToLevel3:
        type: "integer"
        format: "int64"
        example: -254
      coordinateToLevel4:
        type: "integer"
        format: "int64"
        example: -103
      coordinateToLevel5:
        type: "integer"
        format: "int64"
        example: 0
      healthCheckToLevel1:
        type: "integer"
        format: "int64"
        example: -98
      healthCheckToLevel2:
        type: "integer"
        format: "int64"
        example: -48
      healthCheckToLevel3:
        type: "integer"
        format: "int64"
        example: 8
      healthCheckToLevel4:
        type: "integer"
        format: "int64"
        example: 3
      healthCheckToLevel5:
        type: "integer"
        format: "int64"
        example: 0
      tertiaryClassToLevel1:
        type: "integer"
        format: "int64"
        example: -8338
      tertiaryClassToLevel2:
        type: "integer"
        format: "int64"
        example: -5736
      tertiaryClassToLevel3:
        type: "integer"
        format: "int64"
        example: -3134
      tertiaryClassToLevel4:
        type: "integer"
        format: "int64"
        example: -572
      tertiaryClassToLevel5:
        type: "integer"
        format: "int64"
        example: 0
      coordinate2ToLevel1:
        type: "integer"
        format: "int64"
        example: 274
      coordinate2ToLevel2:
        type: "integer"
        format: "int64"
        example: -165
      coordinate2ToLevel3:
        type: "integer"
        format: "int64"
        example: -55
      coordinate2ToLevel4:
        type: "integer"
        format: "int64"
        example: -11
      coordinate2ToLevel5:
        type: "integer"
        format: "int64"
        example: 0
      comparisonToLevel1:
        type: "integer"
        format: "int64"
        example: -22
      comparisonToLevel2:
        type: "integer"
        format: "int64"
        example: -11
      comparisonToLevel3:
        type: "integer"
        format: "int64"
        example: -13
      comparisonToLevel4:
        type: "integer"
        format: "int64"
        example: 9
      comparisonToLevel5:
        type: "integer"
        format: "int64"
        example: 0
    description: "refers Web_Address_To_Level_V view"
  CalendarEvents:
    type: "object"
    required:
    - "calendarEventId"
    properties:
      calendarEventId:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "meeting with Geoplace"
      description:
        type: "string"
        example: "Meeting with Geoplace on Address Submission"
      startDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "20/05/2020"
      endDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "20/05/2020"
      eventCategory:
        type: "string"
        example: "Address"
      eventType:
        type: "string"
        example: "Meeting"
      updatedBy:
        type: "string"
        example: "abc@geoplace.co.uk"
      updatedDate:
        type: "string"
        format: "date in dd/MM/yyyy hh:mm:ss"
        example: "01/05/2020"
    description: "refers CALENDAR_EVENTS table"
  StreetHealthCheckCodes:
    type: "object"
    required:
    - "queryCode"
    properties:
      queryCode:
        type: "string"
        example: "NC6a"
      categoryCode:
        type: "string"
        example: "2"
      description:
        type: "string"
        example: "Open Type 1 and 2 ASG street records that do not exist in the NSG"
      recordType:
        type: "integer"
        format: "int32"
        example: 15
      checkType:
        type: "string"
        example: "PRIORITY"
      priorityNextYearFlag:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers STREET_HEALTH_CHECK table"
  AddressComparisonData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      checkType:
        type: "string"
        example: "PRIORITY"
      recordType:
        type: "string"
        example: "15"
      queryCode:
        type: "string"
        example: "NC6a"
      description:
        type: "string"
        example: "Open Type 1 and 2 ASG street records that do not exist in the NSG"
      reccurringFlag:
        type: "string"
        format: "enum"
        example: "N"
      errorNextYearFlag:
        type: "string"
        format: "enum"
        example: "N"
      reference:
        type: "number"
        example: 4.7900068E7
      dtfLine:
        type: "string"
        example: "15,\"CALUFARIWD\",\"\",\"ODUTKRBPNU\",\"CREBSLLNYD\",\"ENG\""
    description: "refers to WEB_ADDRESS_COMPARISON_DATA_V"
  AddressStreetCustodian:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      streetCustodianName:
        type: "string"
        example: "Martin Laker"
      streetCustodianEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      streetCustodianPhone:
        type: "string"
        example: "76547580475"
      isAdditionalCustodianFlag:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers WEB_ADDRESS_STREET_CUSTODIAN_V table"
  StreetHealthCheckData:
    type: "object"
    required:
    - "authCode"
    - "description"
    - "eventId"
    - "fileId"
    - "lastUpdatedTs"
    - "outputData"
    - "queryCategory"
    - "queryCode"
    - "recordType"
    - "usrn"
    properties:
      authCode:
        type: "number"
        example: 114.0
      description:
        type: "string"
        example: "Open ESUIDs which match an open ESUID in a different authority"
      eventId:
        type: "number"
        example: 855720.0
      fileId:
        type: "number"
        example: 909666.0
      lastUpdatedTs:
        type: "string"
        format: "data in dd/MM/yyyy format"
        example: "05/05/2020"
      outputData:
        type: "string"
        example: "15,\"CALUFARIWD\",\"\",\"ODUTKRBPNU\",\"CREBSLLNYD\",\"ENG\""
      queryCategory:
        type: "string"
        example: "NSG NLPG Comparison"
      queryCode:
        $ref: "#/definitions/StreetHealthCheckCodes"
      recordType:
        type: "string"
        example: "15"
      usrn:
        type: "number"
        example: 4.0800005E7
    description: "refers STREET_HEALTH_DATA table"
  AddressHealthCheckErrorCountsDTO:
    type: "object"
    properties:
      streetErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      streetWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      streetRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      streetDescriptorErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      streetDescriptorWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      streetDescriptorRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      blpuErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      blpuWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      blpuRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      lpiErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      lpiWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      lpiRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      xrefErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      xrefWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      xrefRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
    description: "dto object that holds all counts related to Address Health Check\
      \ errors, warnings and recurring errors"
  AddressHealthCheckErrorCodes:
    type: "object"
    required:
    - "errorCode"
    properties:
      errorCode:
        type: "string"
        example: "AAU21.64"
      errorPriority:
        type: "string"
        example: "BS7666"
      errorType:
        type: "string"
        example: "W"
      hcEnabled:
        type: "string"
        example: "Y"
      message:
        type: "string"
        example: "Street on USRN {0} missing Street Only BLPU record"
      recordType:
        type: "integer"
        format: "int32"
        example: 11
      errorsNextYear:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers to Address_Error_Codes table"
  AddressHealthCheckErrors:
    type: "object"
    required:
    - "errorId"
    properties:
      change_type:
        type: "string"
        example: "U"
      entryDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "11/05/2020"
      errorCode:
        $ref: "#/definitions/AddressHealthCheckErrorCodes"
      errorId:
        type: "number"
        example: 3.9574157E7
      errorRecord:
        type: "string"
        example: "null"
      eventId:
        type: "number"
        example: 1116835.0
      recordType:
        type: "integer"
        format: "int32"
        example: 11
      referenceKey:
        type: "string"
        example: "8100554"
    description: "refers to Address_Errors table"
  AddressHCErrorsPerRecordTypeDTO:
    type: "object"
    properties:
      errorCode:
        type: "string"
        example: "AAU21.64"
      description:
        type: "string"
        example: "Street on USRN {0} missing Street Only BLPU record"
      recordType:
        type: "integer"
        format: "int32"
        example: 11
      totalErrorCount:
        type: "integer"
        format: "int64"
        example: 65
      totalWarningCount:
        type: "integer"
        format: "int64"
        example: 33
      totalRecurringErrorCount:
        type: "integer"
        format: "int64"
        example: 12
    description: "dto object to hold the address health check counts for each error\
      \ code"
  AddressHealthCheckData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      errorType:
        type: "string"
        example: "E"
      recordType:
        type: "integer"
        format: "int32"
        example: 21
      errrorCode:
        type: "string"
        example: "AAU24.28"
      description:
        type: "string"
        example: "This LPI does not belong to the UPRN"
      recurringFlag:
        type: "string"
        format: "enum"
        example: "N"
      errorNextYearFlag:
        type: "string"
        format: "enum"
        example: "N"
      referenceKey:
        type: "string"
        example: "110000000738"
      dtfLine:
        type: "string"
        example: "24,\"I\",\"25\",\"110000000738\",\"0905L000000624\",\"ENG\",\"1\"\
          ,\"2020-02-10\",\"\",\"2020-02-10\",\"2020-02-10\",\"\",\"\",\"\",\"\",\"\
          \",\"\",\"\",\"\",\"\",\"POATEXT\",\"300516\",\"\",\"L\",\"PL26 8EH\",\"\
          ST AUSTELL\",\"C\",\"\",\"\",\"\""
    description: "refers the WEB_ADDRESS_HEALTH_DATA_V"
  PriorityHealthCheckErrorData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      errorType:
        type: "string"
        example: "E"
      recordType:
        type: "integer"
        format: "int32"
        example: 21
      errrorCode:
        type: "string"
        example: "AAU24.28"
      description:
        type: "string"
        example: "This LPI does not belong to the UPRN"
      recurringFlag:
        type: "string"
        format: "enum"
        example: "N"
      errorNextYearFlag:
        type: "string"
        format: "enum"
        example: "N"
      referenceKey:
        type: "string"
        example: "110000000738"
      dtfLine:
        type: "string"
        example: "24,\"I\",\"25\",\"110000000738\",\"0905L000000624\",\"ENG\",\"1\"\
          ,\"2020-02-10\",\"\",\"2020-02-10\",\"2020-02-10\",\"\",\"\",\"\",\"\",\"\
          \",\"\",\"\",\"\",\"\",\"POATEXT\",\"300516\",\"\",\"L\",\"PL26 8EH\",\"\
          ST AUSTELL\",\"C\",\"\",\"\",\"\""
    description: "refers the WEB_ADDRESS_HEALTH_CHECK_2_V"
  PriorityHealthCheckErrorCountsDTO:
    type: "object"
    properties:
      streetErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      streetWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      streetRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      streetDescriptorErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      streetDescriptorWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      streetDescriptorRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      blpuErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      blpuWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      blpuRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      lpiErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      lpiWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      lpiRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
      xrefErrorCount:
        type: "integer"
        format: "int32"
        example: 21
      xrefWarningCount:
        type: "integer"
        format: "int32"
        example: 2
      xrefRecurringErrorCount:
        type: "integer"
        format: "int32"
        example: 5
    description: "dto object that holds all counts related to Priority Health Check\
      \ errors, warnings and recurring errors"
  PriorityErrorsPerRecordTypeDTO:
    type: "object"
    properties:
      errorCode:
        type: "string"
        example: "AAU21.64"
      description:
        type: "string"
        example: "Street on USRN {0} missing Street Only BLPU record"
      recordType:
        type: "integer"
        format: "int32"
        example: 11
      totalErrorCount:
        type: "integer"
        format: "int64"
        example: 65
      totalWarningCount:
        type: "integer"
        format: "int64"
        example: 33
      totalRecurringErrorCount:
        type: "integer"
        format: "int64"
        example: 12
    description: "dto object to hold the priority health check counts for each error\
      \ code"
  AddressExpDTO:
    type: "object"
    properties:
      errorCode:
        type: "string"
        example: "AAU24.28"
      recordType:
        type: "integer"
        format: "int32"
        example: 24
      referenceKey:
        type: "string"
        example: "0905L000000624"
      expMessage:
        type: "string"
        example: "This LPI does not belong to the UPRN"
      dtfLine:
        type: "string"
        example: "24,\"I\",\"25\",\"110000000738\",\"0905L000000624\",\"ENG\",\"1\"\
          ,\"2020-02-10\",\"\",\"2020-02-10\",\"2020-02-10\",\"\",\"\",\"\",\"\",\"\
          \",\"\",\"\",\"\",\"\",\"POATEXT\",\"300516\",\"\",\"L\",\"PL26 8EH\",\"\
          ST AUSTELL\",\"C\",\"\",\"\",\"\""
    description: "dto object to submit Address Exceptions"
  AddressExceptions:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 119.0
      recordType:
        type: "integer"
        format: "int64"
        example: 15
      referenceKey:
        type: "string"
        example: "48015898"
      uniqueKey:
        type: "string"
        example: "3725L000075614"
      errorCode:
        type: "string"
        example: "AAU15.10"
      reason:
        type: "string"
        example: "Town name is correct and matches the Royal Mail address for properties\
          \ on this street"
      entryDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/07/2020"
      fileName:
        type: "string"
        example: "0119_01.txt"
    description: "refers ADDRESS.EXCEPTIONS_LIST table"
  StreetOverall:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      overallLevel:
        type: "string"
        example: "Gold"
      benchmarkLevel:
        type: "string"
        example: "Silver"
      PledgeLevel:
        type: "string"
        example: "Silver"
      nonContributingFlag:
        type: "string"
        format: "enum"
        example: "Y"
      streets:
        type: "integer"
        format: "int64"
        example: 12343
      regionalChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
      regionalDeputyChairFlag:
        type: "string"
        format: "enum"
        example: "N"
      regionalDeputyChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalDeputyChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
    description: "refers to WEB_STREET_MAIN_V table"
  StreetHealthCheckDetails:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      healthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "05/06/2020"
      healthCheckTotal:
        type: "integer"
        format: "int64"
        example: 232
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.54
      healthCheckRatingChange:
        type: "number"
        format: "double"
        example: 0.03
      healthCheckLevel:
        type: "string"
        example: "Gold"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 65
      healthCehckwarnings:
        type: "integer"
        format: "int64"
      healthCheck2Date:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "05/06/2020"
      healthCheck2Total:
        type: "integer"
        format: "int64"
        example: 232
      healthCheck2Rating:
        type: "number"
        format: "double"
        example: 0.54
      healthCheck2RatingChange:
        type: "number"
        format: "double"
        example: 0.03
      healthCheck2Level:
        type: "string"
        example: "Gold"
      healthCheck2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 65
      healthCheck2warnings:
        type: "integer"
        format: "int64"
    description: "refers to WEB_STREET_HEALTH_CHECK_V table"
  StreetLifeCycle:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      underConstructionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      underConstructionTotal:
        type: "integer"
        format: "int64"
        example: 987
      underConstructionRating:
        type: "number"
        format: "double"
        example: 0.98
      underConstructionRatingChange:
        type: "number"
        format: "double"
        example: 0.04
      underConstructionLevel:
        type: "string"
        example: "Silver"
      underConstructionToNextLevel:
        type: "integer"
        format: "int64"
        example: 454
      missingStreetDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "08/05/2020"
      missingStreetTotal:
        type: "integer"
        format: "int64"
        example: 987
      missingStreetRating:
        type: "number"
        format: "double"
        example: 0.98
      missingStreetRatingChange:
        type: "number"
        format: "double"
        example: 0.04
      missingStreetLevel:
        type: "string"
        example: "Silver"
      missingStreetToNextLevel:
        type: "integer"
        format: "int64"
        example: 454
    description: "refers to WEB_STREET_LIFE_CYCLE_V table"
  StreetComparison:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      comparisonDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "12/06/2020"
      comparisonTotal:
        type: "integer"
        format: "int64"
        example: 434
      comparisonRecurring:
        type: "integer"
        format: "int64"
        example: 34
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.65
      comparisonRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      comparisonLevel:
        type: "string"
        example: "Bronze"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 209
      streetSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "08/08/2020"
    description: "refers to WEB_STREET_COMPARISON_V table"
  StreetPrimaryRouteNetworks:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      prnDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      prnIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      prnDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      prnRating:
        type: "number"
        format: "double"
        example: 0.98
      prnRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      prnLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_PRN_V table"
  StreetSEDStructure:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      sedStructureDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      sedIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      sedDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      structureIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      structureDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      sedStructureRating:
        type: "number"
        format: "double"
        example: 0.98
      sedStructureRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      sedStructureLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_SED_STRUCTURE_V table"
  StreetClassifiedNetwork:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      classifiedNetworkDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "15/06/2020"
      aRoadIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      aRoadDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      aRoadLevel:
        type: "string"
        example: "Silver"
      aRoadRating:
        type: "number"
        format: "double"
        example: 0.9
      bRoadIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      bRoadDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      bRoadLevel:
        type: "string"
        example: "Silver"
      bRoadRating:
        type: "number"
        format: "double"
        example: 0.9
      cRoadIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      cRoadDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      cRoadLevel:
        type: "string"
        example: "Silver"
      cRoadRating:
        type: "number"
        format: "double"
        example: 0.9
      classifiedNetworkLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_CLASSIFIED_NETWORK_V table"
  StreetClassifiedGap:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      classifiedNetworkGapDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "15/06/2020"
      aRoadGaps:
        type: "number"
        format: "double"
        example: 22.45
      aRoadGapStreets:
        type: "number"
        format: "double"
        example: 65.9
      aRoadGapRating:
        type: "number"
        format: "double"
        example: 0.9
      aRoadGapRatingChange:
        type: "number"
        format: "double"
        example: 0.9
      aRoadGapLevel:
        type: "string"
        example: "Silver"
      aRoadToNextLevel:
        type: "integer"
        format: "int64"
        example: 44
      bRoadGaps:
        type: "number"
        format: "double"
        example: 22.45
      bRoadGapStreets:
        type: "number"
        format: "double"
        example: 65.9
      bRoadGapRating:
        type: "number"
        format: "double"
        example: 0.9
      bRoadGapRatingChange:
        type: "number"
        format: "double"
        example: 0.9
      bRoadGapLevel:
        type: "string"
        example: "Silver"
      bRoadToNextLevel:
        type: "integer"
        format: "int64"
        example: 44
      cRoadGaps:
        type: "number"
        format: "double"
        example: 22.45
      cRoadGapStreets:
        type: "number"
        format: "double"
        example: 65.9
      cRoadGapRating:
        type: "number"
        format: "double"
        example: 0.9
      cRoadGapRatingChange:
        type: "number"
        format: "double"
        example: 0.9
      cRoadGapLevel:
        type: "string"
        example: "Silver"
      cRoadToNextLevel:
        type: "integer"
        format: "int64"
        example: 44
      classifiedNetworkGapLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_CLASSIFIED_GAP_V table"
  StreetSubmission:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      firstSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.89
      submissionRatingChange:
        type: "number"
        format: "double"
        example: 0.2
      submissionLevel:
        type: "string"
        example: "Silver"
      submissions:
        type: "integer"
        format: "int64"
        example: 876
      latestTestSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
      latestTestSubmissionStatus:
        type: "string"
        example: "Success"
      latestSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "17/06/2020"
      newContentRating:
        type: "number"
        format: "double"
        example: 0.89
      newContentRatingChange:
        type: "number"
        format: "double"
        example: 0.2
      newContentLevel:
        type: "string"
        example: "Silver"
      latestNewContentDate:
        type: "string"
        format: "date in dd/MM/yyyy format"
        example: "06/04/2020"
      countdownDays:
        type: "integer"
        format: "int32"
        example: 3
      countdownLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_SUBMISSION_V table"
  StreetMotorway:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      motorwayDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      motorwayIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      motorwayDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      motorwayRating:
        type: "number"
        format: "double"
        example: 0.98
      motorwayRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      motorwayLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_MOTORWAY_V table"
  StreetMaintenance:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      maintenanceDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      type1Streets:
        type: "integer"
        format: "int64"
        example: 434
      maintenanceTotal:
        type: "integer"
        format: "int64"
        example: 656
      maintenanceRating:
        type: "number"
        format: "double"
        example: 0.87
      maintenanceRatingChange:
        type: "number"
        format: "double"
        example: 0.43
      maintenanceLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_MAINTENANCE_V table"
  StreetPublicRightsofWay:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      prowDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      prowIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      prowDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      prowRating:
        type: "number"
        format: "double"
        example: 0.98
      prowRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      prowLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_PROW_V table"
  StreetNationalCycleRoutes:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      ncrDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      ncrIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      ncrDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      ncrRating:
        type: "number"
        format: "double"
        example: 0.98
      ncrRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      ncrLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_NCR_V table"
  StreetHGVRoute:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      hgvRouteDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      hgvRouteIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      hgvRouteDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      hgvRouteRating:
        type: "number"
        format: "double"
        example: 0.98
      hgvRouteRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      hgvRouteLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_HGV_ROUTE_V table"
  StreetWinterRoute:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      winterRouteDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      winterRouteIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      winterRouteDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      winterRouteRating:
        type: "number"
        format: "double"
        example: 0.98
      winterRouteRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      winterRouteLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_WINTER_ROUTE_V table"
  StreetPedestrianCrossing:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      pedestrianCrossingDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      pedestrianCrossingIncludedLength:
        type: "number"
        format: "double"
        example: 22.45
      pedestrianCrossingDeclaredLength:
        type: "number"
        format: "double"
        example: 65.9
      pedestrianCrossingRating:
        type: "number"
        format: "double"
        example: 0.98
      pedestrianCrossingRatingChange:
        type: "number"
        format: "double"
        example: 0.33
      pedestrianCrossingLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_PEDESTRIAN_V table"
  StreetESUExtremityPoint:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      esuExtremityPointDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/05/2020"
      esuExtremityPointTotal:
        type: "integer"
        format: "int64"
        example: 897
      esuExtremityPointRating:
        type: "number"
        format: "double"
        example: 0.765
      esuExtremityPointRatingChange:
        type: "number"
        format: "double"
        example: 0.21
      esuExtremityPointLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_ESU_EXTREMITY_V table"
  StreetToNextLevelStats:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      healthCheckToLevel1:
        type: "integer"
        format: "int64"
        example: 98
      healthCheckToLevel2:
        type: "integer"
        format: "int64"
        example: 545
      healthCheckToLevel3:
        type: "integer"
        format: "int64"
        example: 65
      healthCheckToLevel4:
        type: "integer"
        format: "int64"
        example: 33
      healthCheckToLevel5:
        type: "integer"
        format: "int64"
        example: 123
      missingStreetToLevel1:
        type: "integer"
        format: "int64"
        example: 98
      missingStreetToLevel2:
        type: "integer"
        format: "int64"
        example: 545
      missingStreetToLevel3:
        type: "integer"
        format: "int64"
        example: 65
      missingStreetToLevel4:
        type: "integer"
        format: "int64"
        example: 33
      missingStreetToLevel5:
        type: "integer"
        format: "int64"
        example: 123
      comparisonToLevel1:
        type: "integer"
        format: "int64"
        example: 98
      comparisonToLevel2:
        type: "integer"
        format: "int64"
        example: 545
      comparisonToLevel3:
        type: "integer"
        format: "int64"
        example: 65
      comparisonToLevel4:
        type: "integer"
        format: "int64"
        example: 33
      comparisonToLevel5:
        type: "integer"
        format: "int64"
        example: 123
    description: "refers to WEB_STREET_TO_LEVEL_V table"
  StreetLevelStats:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      reportMonth:
        type: "string"
        format: "date in dd/MM/yyyy"
      streets:
        type: "integer"
        format: "int64"
        example: 12345
      overallLevel:
        type: "string"
        example: "Gold"
      healthCheckTotal:
        type: "integer"
        format: "int64"
        example: 345
      healthCehckRecurring:
        type: "integer"
        format: "int64"
        example: 76
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.67
      healthCheckLevel:
        type: "string"
        example: "Silver"
      prnLevel:
        type: "string"
        example: "Gold"
      underConstructionTotal:
        type: "integer"
        format: "int64"
        example: 654
      underConstructionRating:
        type: "number"
        format: "double"
        example: 0.75
      underConstructionLevel:
        type: "string"
        example: "Gold"
      missingStreetTotal:
        type: "integer"
        format: "int64"
        example: 876
      missingStreetRating:
        type: "number"
        format: "double"
        example: 0.88
      missingStreetLevel:
        type: "string"
        example: "Gold"
      comparisonTotal:
        type: "integer"
        format: "int64"
        example: 544
      comparisonRecurring:
        type: "integer"
        format: "int64"
        example: 34
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.85
      comparisonLevel:
        type: "string"
        example: "Silver"
      classifiedNetworkLevel:
        type: "string"
        example: "Silver"
      sedStructureLevel:
        type: "string"
        example: "Silver"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.99
      submissionLevel:
        type: "string"
        example: "Gold"
      newContentLevel:
        type: "string"
        example: "Gold"
      aRoadLevel:
        type: "string"
        example: "Gold"
      bRoadLevel:
        type: "string"
        example: "Gold"
      cRoadLevel:
        type: "string"
        example: "Gold"
    description: "refers to WEB_STREET_TREND_V table"
  StreetLandingPageDTO:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      overallLevel:
        type: "string"
        example: "Gold"
      benchmarkLevel:
        type: "string"
        example: "Silver"
      pledgeLevel:
        type: "string"
        example: "Silver"
      nonContributingFlag:
        type: "string"
        format: "enum"
        example: "Y"
      healthCheckDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.98
      healthCheckLevel:
        type: "string"
        example: "Silver"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 987
      healthCheck2Date:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      healthCheck2Rating:
        type: "number"
        format: "double"
        example: 0.98
      healthCheck2Level:
        type: "string"
        example: "Silver"
      healthCheck2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 987
      underConstructionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      underConstructionRating:
        type: "number"
        format: "double"
        example: 0.98
      underConstructionLevel:
        type: "string"
        example: "Silver"
      underConstructionToNextLevel:
        type: "integer"
        format: "int64"
        example: 543
      missingStreetDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      missingStreetRating:
        type: "number"
        format: "double"
        example: 0.98
      missingStreetLevel:
        type: "string"
        example: "Silver"
      missingStreetToNextLevel:
        type: "integer"
        format: "int64"
        example: 543
      comparisonDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.98
      comparisonLevel:
        type: "string"
        example: "Silver"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 543
      prnDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      prnRating:
        type: "number"
        format: "double"
        example: 0.98
      prnLevel:
        type: "string"
        example: "Silver"
      sedStructureDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      sedStructureRating:
        type: "number"
        format: "double"
        example: 0.98
      sedStructureLevel:
        type: "string"
        example: "Silver"
      classifiedNetworkDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      classifiedNetworkLevel:
        type: "string"
        example: "Silver"
      classifiedNetworkGapDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "09/06/2020"
      classifiedNetworkGapLevel:
        type: "string"
        example: "Silver"
      submissionLevel:
        type: "string"
        example: "Gold"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.89
      latestSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      newContentLevel:
        type: "string"
        example: "Gold"
      newContentRating:
        type: "number"
        format: "double"
        example: 0.89
      motorwayDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      motorwayLevel:
        type: "string"
        example: "Gold"
      motorwayRating:
        type: "number"
        format: "double"
        example: 0.89
      maintenanceDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      maintenanceLevel:
        type: "string"
        example: "Gold"
      maintenanceRating:
        type: "number"
        format: "double"
        example: 0.89
      prowDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      prowLevel:
        type: "string"
        example: "Gold"
      prowRating:
        type: "number"
        format: "double"
        example: 0.89
      ncrDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      ncrLevel:
        type: "string"
        example: "Gold"
      ncrRating:
        type: "number"
        format: "double"
        example: 0.89
      hgvRouteDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      hgvRouteLevel:
        type: "string"
        example: "Gold"
      hgvRouteRating:
        type: "number"
        format: "double"
        example: 0.89
      winterRouteDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      winterRouteLevel:
        type: "string"
        example: "Gold"
      winterRouteRating:
        type: "number"
        format: "double"
        example: 0.89
      pedestrianCrossingDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      pedestrianCrossingLevel:
        type: "string"
        example: "Gold"
      pedestrianCrossingRating:
        type: "number"
        format: "double"
        example: 0.89
      esuExtremityPointDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "06/06/2020"
      esuExtremityPointLevel:
        type: "string"
        example: "Gold"
      esuExtremityPointRating:
        type: "number"
        format: "double"
        example: 0.89
      countdownDays:
        type: "integer"
        format: "int32"
        example: 3
      countdownLevel:
        type: "string"
        example: "Silver"
      regionalChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
      regionalDeputyChairName:
        type: "string"
        example: "Craig Wilkins"
      regionalDeputyChairEmail:
        type: "string"
        example: "craig.wilkins@sedgemoor.gov.uk"
    description: "dto object that holds the landing page info for Streets"
  StreetHCErrorCountsDTO:
    type: "object"
    properties:
      recordType:
        type: "string"
        example: "Interest Record"
      totalErrorCount:
        type: "integer"
        format: "int64"
        example: 43
      totalReviewCount:
        type: "integer"
        format: "int64"
        example: 22
      totalInfoCount:
        type: "integer"
        format: "int64"
        example: 6
    description: "dto that holds the summary counts for street health check 1 and\
      \ 2"
  StreetPrnData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "number"
        example: 4518569.0
      streetDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      roadNumberList:
        type: "string"
        example: "A6077, B6130, B6232"
      usrnLength:
        type: "number"
        format: "double"
        example: 323.805
    description: "refers to the WEB_STREET_PRN_DATA_V"
  StreetAddressCustodian:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      addressAuthorityName:
        type: "string"
        example: "John Smith"
      addressAuthCode:
        type: "number"
        example: 114.0
      addressCustodianName:
        type: "string"
        example: "John Smith"
      addressCustodianEmail:
        type: "string"
        example: "john@email.co.uk"
      addressCustodianPhone:
        type: "string"
        example: "7787879799"
      additionalAddressCustodianFlag:
        type: "string"
        format: "enum"
        example: "N"
      addressSubmissionDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "30/07/2020"
    description: "refers WEB_STREET_ADDRESS_CUSTODIAN_V table"
  StreetComparisonData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      checkType:
        type: "string"
        example: "PRIORITY"
      recordType:
        type: "string"
        example: "15"
      queryCode:
        type: "string"
        example: "NC6a"
      description:
        type: "string"
        example: "Open Type 1 and 2 ASG street records that do not exist in the NSG"
      reccurringFlag:
        type: "string"
        format: "enum"
        example: "N"
      errorNextYearFlag:
        type: "string"
        format: "enum"
        example: "N"
      reference:
        type: "number"
        example: 4.7900068E7
      dtfLine:
        type: "string"
        example: "15,\"CALUFARIWD\",\"\",\"ODUTKRBPNU\",\"CREBSLLNYD\",\"ENG\""
    description: "refers to WEB_STREET_COMPARISON_DATA_V"
  StreetHGVRouteData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "number"
        example: 4353245.0
      streetDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      sequenceNumber:
        type: "number"
        example: 2.0
      specialDesigDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      usrnLength:
        type: "number"
        format: "double"
        example: 67.55
    description: "refers to WEB_STREET_HGV_ROUTE_DATA_V"
  StreetPedestrianCrossingData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "number"
        example: 4353245.0
      streetDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      sequenceNumber:
        type: "number"
        example: 22.0
      specialDesigDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
    description: "refers to WEB_STREET_PEDESTRIAN_DATA_V"
  StreetWinterRouteData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "number"
        example: 4353245.0
      streetDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      sequenceNumber:
        type: "number"
        example: 2.0
      specialDesigDescription:
        type: "string"
        example: "BATH BRIDGE ROUNDABOUT"
      usrnLength:
        type: "number"
        format: "double"
        example: 67.55
    description: "refers to WEB_STREET_WINTER_ROUTE_DATA_V"
  StreetMaintenanceData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "number"
        example: 4353245.0
      name:
        type: "string"
        example: "text"
      localityAndTown:
        type: "string"
        example: "Victoria,London"
    description: "refers to WEB_STREET_MAINTENANCE_DATA_V"
  MissingStreetData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      roadLink:
        type: "string"
        example: "osgb234342343"
      routeHierarchy:
        type: "string"
        example: "test"
      nearByProperties:
        type: "integer"
        format: "int64"
        example: 34
      roadLength:
        type: "integer"
        format: "int64"
        example: 442
      recurringFlag:
        type: "string"
        format: "enum"
        example: "N"
      exceptionFlag:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers to WEB_STREET_MISSING_DATA_V"
  StreetUnderConstructionData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "integer"
        format: "int64"
        example: 4243343
      streetDescription:
        type: "string"
        example: "test"
      localityName:
        type: "string"
        example: "Victoria"
      townName:
        type: "string"
        example: "London"
      administrativeArea:
        type: "string"
        example: "test"
      properties:
        type: "integer"
        format: "int64"
        example: 62
      recurringFlag:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers to WEB_STREET_CONSTRUCTION_DATA_V"
  StreetEsuPointData:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      usrn:
        type: "integer"
        format: "int64"
        example: 4243343
      esuId:
        type: "string"
        example: "esu134131231"
      streetDescription:
        type: "string"
        example: "test"
      localityName:
        type: "string"
        example: "Victoria"
      townName:
        type: "string"
        example: "London"
      exceptionFlag:
        type: "string"
        format: "enum"
        example: "N"
    description: "refers to WEB_STREET_ESU_POINT_DATA_V"
  StreetDeclarations:
    type: "object"
    required:
    - "authCode"
    - "dataVersion"
    - "declarationDate"
    - "statisticTypeId"
    properties:
      authCode:
        type: "number"
        example: 114.0
      dataVersion:
        type: "integer"
        format: "int64"
        example: 2019
      statisticTypeId:
        type: "integer"
        format: "int32"
        example: 101
      declarationDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "20/08/2020"
      declarationValue:
        type: "integer"
        format: "int64"
        example: 100
      updatedBy:
        type: "string"
        example: "abc@xyz.co.uk"
    description: "refers to STREET_DECLARATIONS"
  EcfActionPlans:
    type: "object"
    required:
    - "measureId"
    - "nonContributorId"
    properties:
      nonContributorId:
        type: "integer"
        format: "int64"
        example: 1
      measureId:
        type: "integer"
        format: "int32"
        example: 2
      ecfActionPlanText:
        type: "string"
        example: "Data to be submitted within this week"
      ecfActionPlanDate:
        type: "string"
        format: "date in DD/MM/YYYY"
        example: "22/07/2020"
      measureTitle:
        type: "string"
        example: "Coordinates 1"
      measureTnlText:
        type: "string"
        example: "fixed needed 123"
    description: "refers to ECF_ACTION_PLANS"
  NonContributor:
    type: "object"
    required:
    - "nonContributorId"
    properties:
      nonContributorId:
        type: "integer"
        format: "int64"
        example: 1
      periodYear:
        type: "number"
        example: 2020.0
      reportMonth:
        type: "string"
        format: "date in dd/MM/yyyy format"
        example: "22/07/2020"
      authCode:
        type: "number"
        example: 114.0
      gazetteerId:
        type: "integer"
        format: "int32"
        example: 1
      formSubmissionFlag:
        type: "string"
        format: "enum"
        example: "N"
      formOtherCriteriaFlag:
        type: "string"
        format: "enum"
        example: "N"
      ecfSubmitterComments:
        type: "string"
        example: "null"
      ecfSubmittedBy:
        type: "string"
        example: "John Smith"
      ecfSubmittedDate:
        type: "string"
        format: "date in dd/MM/yyyy format"
        example: "20/07/2020"
      ecfConfirmedBy:
        type: "string"
        example: "Will Johnson"
      ecfConfirmationDate:
        type: "string"
        format: "date in dd/MM/yyyy format"
        example: "04/08/2020"
      ecfApprovalDate:
        type: "string"
        format: "date in dd/MM/yyyy format"
        example: "04/08/2020"
      ecfApprovalFlag:
        type: "string"
        format: "enum"
        example: "Y"
      ecfDismissedFlag:
        type: "string"
        format: "enum"
        example: "N"
      ecfConfirmerComments:
        type: "string"
        example: "Confirming the above filled form"
      ecfApproverComments:
        type: "string"
        example: "Approved this form"
      echInternalComments:
        type: "string"
        example: "This form can be accepted"
      ecfActions:
        $ref: "#/definitions/EcfActionPlans"
      caseNumber:
        type: "integer"
        format: "int64"
        example: 2343423423
      ecfApproverTrafficLight:
        type: "string"
        format: "enum with values R, A, G"
        example: "A"
    description: "refers to NON_CONTRIBUTORS"
  ACENonContributorDTO:
    type: "object"
    required:
    - "nonContributorId"
    properties:
      nonContributorId:
        type: "integer"
        format: "int64"
        example: 1
      ecfApprovalFlag:
        type: "string"
        format: "enum"
        example: "Y"
      ecfDismissedFlag:
        type: "string"
        format: "enum"
        example: "N"
      ecfApproverComments:
        type: "string"
        example: "Approved this form"
      ecfInternalComments:
        type: "string"
        example: "This form looks good"
      ecfApproverTrafficLights:
        type: "string"
        example: "A"
    description: "refers to dto object that will be received from the ACE ui page"
  ACEDetails:
    type: "object"
    properties:
      gazetteerId:
        type: "number"
        example: 1.0
      reportMonth:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "07/08/2020"
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      authCode:
        type: "number"
        example: 114.0
      regionName:
        type: "string"
        example: "South East"
      custodianName:
        type: "string"
        example: "John Smith"
      custodianEmail:
        type: "string"
        example: "john.smith@email.com"
      additionalCustodianFlag:
        type: "string"
        format: "enum"
        example: "Y"
      curentStatus:
        type: "string"
        example: "Submitted"
      monthsNonContributing:
        type: "string"
        example: "2"
      CriteriaList:
        type: "string"
        example: "criteria list"
      ecfSubmittedFlag:
        type: "string"
        example: "Y"
      ecfApproverComments:
        type: "string"
        example: "form is verified and ace is happy"
      ecfInternalComments:
        type: "string"
        example: "This form looks good"
      ecfApprovalFlag:
        type: "string"
        example: "Y"
      ecfApproverTrafficLight:
        type: "string"
        example: "A"
      caseNumber:
        type: "integer"
        format: "int64"
        example: 2343433243
    description: "refers to WEB_ACE_MAIN_V"
  MissingStreetExceptionsDTO:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      roadLink:
        type: "integer"
        format: "int64"
        example: 53322434234234
      queryCode:
        type: "string"
        example: "SD123"
      reason:
        type: "string"
        example: "This Road Link is invalid"
    description: "refers to dto object that will be received for the Missing Street\
      \ Exceptions"
  StreetExceptionDTO:
    type: "object"
    properties:
      authCode:
        type: "number"
        example: 114.0
      referenceKey:
        type: "integer"
        format: "int64"
        example: 2423432
      queryCode:
        type: "string"
        example: "SD123"
      reason:
        type: "string"
        example: "This USRN is invalid"
    description: "refers to dto object that will be received for the Street Health\
      \ check Exceptions"
  AddressRegion:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      authorities:
        type: "integer"
        format: "int32"
        example: 30
      nonContributors:
        type: "integer"
        format: "int32"
        example: 2
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      regionName:
        type: "string"
        example: "South West"
    description: "refers to WEB_ADDRESS_REGION_MAIN_V"
  AddressRegionRank:
    type: "object"
    required:
    - "regionId"
    properties:
      regionId:
        type: "integer"
        format: "int32"
        example: 1
      measure:
        type: "string"
        example: "Coordinates"
      goldTotalCount:
        type: "integer"
        format: "int64"
        example: 23
      silverTotalCount:
        type: "integer"
        format: "int64"
        example: 76
      bronze:
        type: "integer"
        format: "int64"
        example: 22
      ans:
        type: "integer"
        format: "int64"
        example: 22
      bns:
        type: "integer"
        format: "int64"
        example: 22
      regionPoints:
        type: "string"
        example: "5.75"
      regionRank:
        type: "integer"
        format: "int32"
        example: 2
    description: "refers to WEB_ADDRESS_REGION_RANK_V"
  AddressRegionCriteria:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      nonContributorFlag:
        type: "string"
        format: "enum"
        example: "N"
      addressSharedFlag:
        type: "string"
        format: "enum"
        example: "Y"
      streetNumber:
        type: "integer"
        format: "int64"
        example: 4545
      OverallLevel:
        type: "string"
        example: "Gold"
      PledgeLevel:
        type: "string"
        example: "Gold"
      MonthsAtBns:
        type: "integer"
        format: "int32"
        example: 3
      criteriaAtBns:
        type: "integer"
        format: "int32"
        example: 5
      coordinateRating:
        type: "number"
        format: "double"
        example: 0.99985
      coordinateLevel:
        type: "string"
        example: "Silver"
      coordinateToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.99985
      healthCheckLevel:
        type: "string"
        example: "Silver"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      tertiaryClassRating:
        type: "number"
        format: "double"
        example: 0.99985
      tertiaryClassLevel:
        type: "string"
        example: "Silver"
      tertiaryClassToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      priorityObjectRating:
        type: "number"
        format: "double"
        example: 0.99985
      priorityObjectLevel:
        type: "string"
        example: "Silver"
      priorityObjectToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      coordinate2Rating:
        type: "number"
        format: "double"
        example: 0.99985
      coordinate2Level:
        type: "string"
        example: "Silver"
      coordinate2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      newVoaPafRating:
        type: "number"
        format: "double"
        example: 0.99985
      newVoaPafLevel:
        type: "string"
        example: "Silver"
      newVoaPafToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      newVoaPafUnlinked:
        type: "number"
        format: "double"
        example: 0.99985
      remainingAllowance:
        type: "integer"
        format: "int64"
        example: 456
      lastResyncDate:
        type: "string"
        format: "date in dd/MM/yyyy"
        example: "30/07/2020"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.99985
      submissionLevel:
        type: "string"
        example: "Silver"
      submissionToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.99985
      comparisonLevel:
        type: "string"
        example: "Silver"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      ndrRating:
        type: "number"
        format: "double"
        example: 0.99985
      ndrLevel:
        type: "string"
        example: "Silver"
      ndrToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      pafRating:
        type: "number"
        format: "double"
        example: 0.99985
      pafLevel:
        type: "string"
        example: "Silver"
      pafToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      ctaxRating:
        type: "number"
        format: "double"
        example: 0.99985
      ctaxLevel:
        type: "string"
        example: "Silver"
      ctaxToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
    description: "refers to WEB_ADDRESS_REGION_CRITERION_V"
  AddressRegionIndicator:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      candidateRating:
        type: "number"
        format: "double"
        example: 0.99985
      candidateLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_ADDRESS_REGION_INDICATOR_V"
  AddressRegionContacts:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      custodianName:
        type: "string"
        example: "Martin Laker"
      custodianEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      custodianPhone:
        type: "string"
        example: "01225 394344"
      additionalCustodianName:
        type: "string"
        example: "Martin Laker"
      additionalCustodianEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      additionalCustodianPhone:
        type: "string"
        example: "01225 394344"
      additionalCustodian2Name:
        type: "string"
        example: "Martin Laker"
      additionalCustodian2Email:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      additionalCustodian2Phone:
        type: "string"
        example: "01225 394344"
      snnOfficerName:
        type: "string"
        example: "Martin Laker"
      snnOfficerEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      snnOfficerPhone:
        type: "string"
        example: "01225 394344"
      snnOfficer2Name:
        type: "string"
        example: "Martin Laker"
      snnOfficer2Email:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      snnOfficer2Phone:
        type: "string"
        example: "01225 394344"
    description: "refers to WEB_ADDRESS_REGION_CONTACT_V"
  AddressContactDetails:
    type: "object"
    required:
    - "authCode"
    - "contactName"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      regionName:
        type: "string"
        example: "South West"
      contactType:
        type: "string"
        example: "Additional Authority Address Custodian"
      contactName:
        type: "string"
        example: "Alison Szajdzicka"
      contactEmail:
        type: "string"
        example: "alison_ka@bathnes.gov.uk"
      contactPhone:
        type: "string"
        example: "01225 39321"
    description: "refers to WEB_ADDRESS_CONTACT_DETAILS_V"
  AddressRegionPreBenchmark:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      OverallLevel:
        type: "string"
        example: "Gold"
      criteriaAtBns:
        type: "integer"
        format: "int32"
        example: 5
      coordinateRating:
        type: "number"
        format: "double"
        example: 0.99985
      coordinateLevel:
        type: "string"
        example: "Silver"
      coordinateToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.99985
      healthCheckLevel:
        type: "string"
        example: "Silver"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      priorityHealthCheckRating:
        type: "number"
        format: "double"
        example: 0.99985
      priorityHealthCheckLevel:
        type: "string"
        example: "Silver"
      priorityHealthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      tertiaryClassRating:
        type: "number"
        format: "double"
        example: 0.99985
      tertiaryClassLevel:
        type: "string"
        example: "Silver"
      tertiaryClassToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      priorityObjectRating:
        type: "number"
        format: "double"
        example: 0.99985
      priorityObjectLevel:
        type: "string"
        example: "Silver"
      priorityObjectToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      coordinate2Rating:
        type: "number"
        format: "double"
        example: 0.99985
      coordinate2Level:
        type: "string"
        example: "Silver"
      coordinate2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      candidateRating:
        type: "number"
        format: "double"
        example: 0.99985
      candidateLevel:
        type: "string"
        example: "Silver"
      candidateToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      candidate2Rating:
        type: "number"
        format: "double"
        example: 0.99985
      candidate2Level:
        type: "string"
        example: "Silver"
      candidate2ToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      newVoaPafRating:
        type: "number"
        format: "double"
        example: 0.99985
      newVoaPafLevel:
        type: "string"
        example: "Silver"
      newVoaPafToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      newVoaPafUnlinked:
        type: "number"
        format: "double"
        example: 0.99985
      submissionRating:
        type: "number"
        format: "double"
        example: 0.99985
      submissionLevel:
        type: "string"
        example: "Silver"
      submissionToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.99985
      comparisonLevel:
        type: "string"
        example: "Silver"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      ndrRating:
        type: "number"
        format: "double"
        example: 0.99985
      ndrLevel:
        type: "string"
        example: "Silver"
      ndrToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      pafRating:
        type: "number"
        format: "double"
        example: 0.99985
      pafLevel:
        type: "string"
        example: "Silver"
      pafToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      ctaxRating:
        type: "number"
        format: "double"
        example: 0.99985
      ctaxLevel:
        type: "string"
        example: "Silver"
      ctaxToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
    description: "refers to WEB_ADDRESS_REGION_BENCHMARK_V"
  StreetRegion:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      authorities:
        type: "integer"
        format: "int32"
        example: 30
      nonContributors:
        type: "integer"
        format: "int32"
        example: 2
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      regionName:
        type: "string"
        example: "South West"
    description: "refers to WEB_STREET_REGION_MAIN_V"
  StreetRegionRank:
    type: "object"
    required:
    - "measure"
    - "regionId"
    properties:
      regionId:
        type: "integer"
        format: "int32"
        example: 1
      measure:
        type: "string"
        example: "Health Check 1"
      goldTotalCount:
        type: "integer"
        format: "int64"
        example: 23
      silverTotalCount:
        type: "integer"
        format: "int64"
        example: 76
      bronze:
        type: "integer"
        format: "int64"
        example: 22
      ans:
        type: "integer"
        format: "int64"
        example: 22
      bns:
        type: "integer"
        format: "int64"
        example: 22
      regionPoints:
        type: "string"
        example: "5.75"
      regionRank:
        type: "integer"
        format: "int32"
        example: 2
    description: "refers to WEB_STREET_REGION_RANK_V"
  StreetRegionCriteria:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      nonContributorFlag:
        type: "string"
        format: "enum"
        example: "N"
      streetSharedFlag:
        type: "string"
        format: "enum"
        example: "Y"
      streets:
        type: "integer"
        format: "int64"
        example: 4545
      OverallLevel:
        type: "string"
        example: "Gold"
      PledgeLevel:
        type: "string"
        example: "Gold"
      MonthsAtBns:
        type: "integer"
        format: "int32"
        example: 3
      criteriaAtBns:
        type: "integer"
        format: "int32"
        example: 5
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.99985
      healthCheckLevel:
        type: "string"
        example: "Silver"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      prnRating:
        type: "number"
        format: "double"
        example: 0.99985
      prnLevel:
        type: "string"
        example: "Silver"
      underConstructionRating:
        type: "number"
        format: "double"
        example: 0.99985
      underConstructionLevel:
        type: "string"
        example: "Silver"
      underConstructionToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      missingStreetRating:
        type: "number"
        format: "double"
        example: 0.99985
      missingStreetLevel:
        type: "string"
        example: "Silver"
      missingStreetToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.99985
      comparisonLevel:
        type: "string"
        example: "Silver"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      aRoadLevel:
        type: "string"
        example: "Silver"
      bRoadLevel:
        type: "string"
        example: "Silver"
      cRoadLevel:
        type: "string"
        example: "Silver"
      classifiedNetworkLevel:
        type: "string"
        example: "Silver"
      sedStructureRating:
        type: "number"
        format: "double"
        example: 0.99985
      sedStructureLevel:
        type: "string"
        example: "Silver"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.99985
      submissionLevel:
        type: "string"
        example: "Silver"
      newContentRating:
        type: "number"
        format: "double"
        example: 0.99985
      newContentLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_REGION_CRITERION_V"
  StreetRegionIndicator:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      indicatorsAtLevel1:
        type: "integer"
        format: "int32"
        example: 4
      motorwayRating:
        type: "number"
        format: "double"
        example: 0.99985
      motorwayLevel:
        type: "string"
        example: "Silver"
      healthCheck2Rating:
        type: "number"
        format: "double"
        example: 0.99985
      healthCheck2Level:
        type: "string"
        example: "Silver"
      maintenanceRating:
        type: "number"
        format: "double"
        example: 0.99985
      maintenanceLevel:
        type: "string"
        example: "Silver"
      prowRating:
        type: "number"
        format: "double"
        example: 0.99985
      prowLevel:
        type: "string"
        example: "Silver"
      ncrRating:
        type: "number"
        format: "double"
        example: 0.99985
      ncrLevel:
        type: "string"
        example: "Silver"
      hgvRouteRating:
        type: "number"
        format: "double"
        example: 0.99985
      hgvRouteLevel:
        type: "string"
        example: "Silver"
      winterRouteRating:
        type: "number"
        format: "double"
        example: 0.99985
      winterRouteLevel:
        type: "string"
        example: "Silver"
      pedestrianCrossingRating:
        type: "number"
        format: "double"
        example: 0.99985
      pedestrianCrossingLevel:
        type: "string"
        example: "Silver"
      esuExtremityPointsRating:
        type: "number"
        format: "double"
        example: 0.99985
      esuExtremityPointsLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_REGION_INDICATOR_V"
  StreetRegionContacts:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      custodianName:
        type: "string"
        example: "Martin Laker"
      custodianEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      custodianPhone:
        type: "string"
        example: "01225 394344"
      additionalCustodianName:
        type: "string"
        example: "Martin Laker"
      additionalCustodianEmail:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      additionalCustodianPhone:
        type: "string"
        example: "01225 394344"
      additionalCustodian2Name:
        type: "string"
        example: "Martin Laker"
      additionalCustodian2Email:
        type: "string"
        example: "martin_laker@bathnes.gov.uk"
      additionalCustodian2Phone:
        type: "string"
        example: "01225 394344"
    description: "refers to WEB_STREET_REGION_CONTACT_V"
  StreetContactDetails:
    type: "object"
    required:
    - "authCode"
    - "contactName"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      regionName:
        type: "string"
        example: "South West"
      contactType:
        type: "string"
        example: "Additional Street Address Custodian"
      contactName:
        type: "string"
        example: "Alison Szajdzicka"
      contactEmail:
        type: "string"
        example: "alison_ka@bathnes.gov.uk"
      contactPhone:
        type: "string"
        example: "01225 39321"
    description: "refers to WEB_STREET_CONTACT_DETAILS_V"
  StreetRegionPreBenchmark:
    type: "object"
    required:
    - "authCode"
    properties:
      authCode:
        type: "number"
        example: 114.0
      regionId:
        type: "integer"
        format: "int32"
        example: 7
      authorityName:
        type: "string"
        example: "Bath and North East Somerset Council"
      OverallLevel:
        type: "string"
        example: "Gold"
      criteriaAtBns:
        type: "integer"
        format: "int32"
        example: 5
      healthCheckRating:
        type: "number"
        format: "double"
        example: 0.99985
      healthCheckLevel:
        type: "string"
        example: "Silver"
      healthCheckToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      prnRating:
        type: "number"
        format: "double"
        example: 0.99985
      prnLevel:
        type: "string"
        example: "Silver"
      underConstructionRating:
        type: "number"
        format: "double"
        example: 0.99985
      underConstructionLevel:
        type: "string"
        example: "Silver"
      underConstructionToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      missingStreetRating:
        type: "number"
        format: "double"
        example: 0.99985
      missingStreetLevel:
        type: "string"
        example: "Silver"
      missingStreetToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      esuExtremityPointsRating:
        type: "number"
        format: "double"
        example: 0.99985
      esuExtremityPointsLevel:
        type: "string"
        example: "Silver"
      esuExtremityPointsToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      comparisonRating:
        type: "number"
        format: "double"
        example: 0.99985
      comparisonLevel:
        type: "string"
        example: "Silver"
      comparisonToNextLevel:
        type: "integer"
        format: "int64"
        example: 456
      aRoadGapLevel:
        type: "string"
        example: "Silver"
      bRoadGapLevel:
        type: "string"
        example: "Silver"
      cRoadGapLevel:
        type: "string"
        example: "Silver"
      classifiedNetworkGapLevel:
        type: "string"
        example: "Silver"
      sedStructureRating:
        type: "number"
        format: "double"
        example: 0.99985
      sedStructureLevel:
        type: "string"
        example: "Silver"
      submissionRating:
        type: "number"
        format: "double"
        example: 0.99985
      submissionLevel:
        type: "string"
        example: "Silver"
      newContentRating:
        type: "number"
        format: "double"
        example: 0.99985
      newContentLevel:
        type: "string"
        example: "Silver"
    description: "refers to WEB_STREET_REGION_BENCHMARK_V"
